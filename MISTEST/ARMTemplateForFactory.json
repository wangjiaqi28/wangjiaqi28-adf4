{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "数据工厂名称",
			"defaultValue": "MISTEST"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "“AzureFunction1”的“functionKey”的安全字符串"
		},
		"Sftp_TEST_password": {
			"type": "secureString",
			"metadata": "“Sftp_TEST”的“password”的安全字符串"
		},
		"mis_link_service_20250312_connectionString": {
			"type": "secureString",
			"metadata": "“mis_link_service_20250312”的“connectionString”的安全字符串"
		},
		"mis_link_service_20250422_connectionString": {
			"type": "secureString",
			"metadata": "“mis_link_service_20250422”的“connectionString”的安全字符串"
		},
		"nrtutest9ce5_link_service_connectionString": {
			"type": "secureString",
			"metadata": "“nrtutest9ce5_link_service”的“connectionString”的安全字符串"
		},
		"nrtutestb8ff_link_service_connectionString": {
			"type": "secureString",
			"metadata": "“nrtutestb8ff_link_service”的“connectionString”的安全字符串"
		},
		"wjq_test_fun_linkservice_functionKey": {
			"type": "secureString",
			"metadata": "“wjq_test_fun_linkservice”的“functionKey”的安全字符串"
		},
		"wjq_test_serviceNow_password": {
			"type": "secureString",
			"metadata": "“wjq_test_serviceNow”的“password”的安全字符串"
		},
		"wjq_test_sftp_link_service_password": {
			"type": "secureString",
			"metadata": "“wjq_test_sftp_link_service”的“password”的安全字符串"
		},
		"AzureFunction1_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://misfun-test-package.azurewebsites.net"
		},
		"SCP_1_ADFLinkedServices_Blob001_Dev_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://20250226datalake.blob.core.windows.net/"
		},
		"Sftp_TEST_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "20250312sftp.blob.core.windows.net"
		},
		"Sftp_TEST_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "20250312sftp.azuresftp"
		},
		"mis_azure_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mis-key-value.vault.azure.net/"
		},
		"mis_link_service_20250109_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://20250219mis.blob.core.windows.net/"
		},
		"mis_link_service_20250219_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://20250219mis.blob.core.windows.net/"
		},
		"wj_test_linkservice_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://20250110mis.blob.core.windows.net/"
		},
		"wjq_test_fun_linkservice_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://misfun3.azurewebsites.net"
		},
		"wjq_test_serviceNow_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "@{linkedService().sn_user_name}"
		},
		"wjq_test_serviceNow_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "@{linkedService().sn_user_name}"
		},
		"wjq_test_sftp_link_service_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "123"
		},
		"wjq_test_sftp_link_service_properties_typeProperties_hostKeyFingerprint": {
			"type": "string",
			"defaultValue": "123"
		},
		"wjq_test_sftp_link_service_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "123"
		},
		"SBTIMP0024-pipeline02-trigger01_properties_SBTIMP0024-pipeline02_parameters_tmp_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"SBTIMP0024-pipeline02-trigger01_properties_SBTIMP0024-pipeline02_parameters_tmp_file_name": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"SBTIMP0024-pipeline02-trigger01_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"SBTIMP0025-pipeline02-trigger01_properties_SBTIMP0025-pipeline02_parameters_tmp_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"SBTIMP0025-pipeline02-trigger01_properties_SBTIMP0025-pipeline02_parameters_tmp_file_name": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"SBTIMP0025-pipeline02-trigger01_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"dataflow_file_triiger_properties_dataflow_file_triiger_parameters_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"dataflow_file_triiger_properties_dataflow_file_triiger_parameters_filename": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"dataflow_file_triiger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250226datalake"
		},
		"fix_from_storeage_trigger_properties_FIX_FROM_STOREGY_2_parameters_tmp_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"fix_from_storeage_trigger_properties_FIX_FROM_STOREGY_2_parameters_tmp_file_name": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"fix_from_storeage_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"storeagy_delete_by_metadata_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"test_webhook_url_trigger_properties_pipeline16_parameters_filename": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"test_webhook_url_trigger_properties_pipeline16_parameters_foldpath": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"test_webhook_url_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250312sftp"
		},
		"to_storage_trigger_properties_FIX_TO_STOREGY_01_parameters_core_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"to_storage_trigger_properties_FIX_TO_STOREGY_01_parameters_core_file_name": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"to_storage_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"to_storeage_trigger_sup_properties_FIX_TO_STOREGY_02_1-1_parameters_core_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"to_storeage_trigger_sup_properties_FIX_TO_STOREGY_02_1-1_parameters_core_file_name": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"to_storeage_trigger_sup_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"to_trigger_storeage_new_properties_FIX_TO_STOREGY_02_1-2_parameters_core_dir": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.folderPath"
		},
		"to_trigger_storeage_new_properties_FIX_TO_STOREGY_02_1-2_parameters_core_file_name": {
			"type": "string",
			"defaultValue": "@trigger().outputs.body.filename"
		},
		"to_trigger_storeage_new_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"trigger3_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250312sftp"
		},
		"trigger4_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/MIS_TEST/providers/Microsoft.Storage/storageAccounts/storageaccountimp2"
		},
		"triggerSFTP_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250312sftp"
		},
		"trigger_sftp_delete2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250312sftp"
		},
		"trigger_to_storage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		},
		"trigger_to_storage_2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ad1ca85f-99fd-4bfc-838b-9466bfcbebee/resourceGroups/NRTU_TEST/providers/Microsoft.Storage/storageAccounts/20250219mis"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FIX_FROM_STORAGE_GET_SFTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "get_file_from_sftp",
							"body": "",
							"headers": {
								"sftp_host": {
									"value": "@pipeline().parameters.sftp_host",
									"type": "Expression"
								},
								"sftp_port": {
									"value": "@pipeline().parameters.sftp_port",
									"type": "Expression"
								},
								"sftp_username": {
									"value": "@pipeline().parameters.sftp_username",
									"type": "Expression"
								},
								"sftp_filepath": {
									"value": "@pipeline().parameters.sftp_filepath",
									"type": "Expression"
								},
								"blob_container": {
									"value": "@pipeline().parameters.blob_container",
									"type": "Expression"
								},
								"blob_name": {
									"value": "@pipeline().parameters.blob_name",
									"type": "Expression"
								},
								"key_vault_name": {
									"value": "@pipeline().parameters.key_vault_name",
									"type": "Expression"
								},
								"secret_name": {
									"value": "@pipeline().parameters.secret_name",
									"type": "Expression"
								},
								"account_storage_name": {
									"value": "@pipeline().parameters.account_storage_name",
									"type": "Expression"
								}
							},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sftp_host": {
						"type": "string",
						"defaultValue": "20250312sftp.blob.core.windows.net"
					},
					"sftp_port": {
						"type": "string",
						"defaultValue": "22"
					},
					"sftp_username": {
						"type": "string",
						"defaultValue": "20250312sftp.azuresftp"
					},
					"sftp_filepath": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"blob_container": {
						"type": "string",
						"defaultValue": "input"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "tmp/testSFTP2.csv"
					},
					"key_vault_name": {
						"type": "string",
						"defaultValue": "mis-key-vaule"
					},
					"secret_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"account_storage_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T09:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_FROM_STOREGY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "取込側変換パイプライン",
				"activities": [
					{
						"name": "TEST_DATA_COPY",
						"description": "一時ファイルから基軸ファイルを作成し、取込側基軸ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "from_storage_activity_copy_from_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'input/','')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.tmp_file_name",
										"type": "Expression"
									},
									"file_column_delimiter": {
										"value": "@pipeline().parameters.tmp_file_column_delimiter",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "from_storage_activity_copy_to_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('core_file_name')",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "web",
						"description": "削除情報ファイルに一時ファイルと基軸ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_DATA_COPY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',concat(pipeline().parameters.tmp_dir,'_DEL'),'/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:',pipeline().parameters.core_container,'/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "input/tmp/IFB"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "IFB.csv"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": true
					},
					"tmp_null_value": {
						"type": "string",
						"defaultValue": " "
					},
					"core_container": {
						"type": "string",
						"defaultValue": "input"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/IFB"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))),'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-07T08:06:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_from_20250109')]",
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_to_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_FROM_STOREGY_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "取込側変換パイプライン",
				"activities": [
					{
						"name": "TEST_DATA_COPY",
						"description": "一時ファイルから基軸ファイルを作成し、取込側基軸ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "from_storage_activity_copy_from_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'input/','')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.tmp_file_name",
										"type": "Expression"
									},
									"file_column_delimiter": {
										"value": "@pipeline().parameters.tmp_file_column_delimiter",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "from_storage_activity_copy_to_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('core_file_name')",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "web",
						"description": "削除情報ファイルに一時ファイルと基軸ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_DATA_COPY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',concat(pipeline().parameters.tmp_dir,'_DEL'),'/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:',pipeline().parameters.core_container,'/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string"
					},
					"tmp_file_name": {
						"type": "string"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": true
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_container": {
						"type": "string",
						"defaultValue": "input"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/IFA"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "20250110mis"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))),'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-11T06:46:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_from_20250109')]",
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_to_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_FROM_STOREGY_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "取込側変換パイプライン",
				"activities": [
					{
						"name": "TEST_DATA_COPY",
						"description": "一時ファイルから基軸ファイルを作成し、取込側基軸ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "from_storage_activity_copy_from_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'input/','')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.tmp_file_name",
										"type": "Expression"
									},
									"file_column_delimiter": {
										"value": "@pipeline().parameters.tmp_file_column_delimiter",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "from_storage_activity_copy_to_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('core_file_name')",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "web",
						"description": "削除情報ファイルに一時ファイルと基軸ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_DATA_COPY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250219mis.blob.core.windows.net/',concat(pipeline().parameters.tmp_dir,'_DEL'),'/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:',pipeline().parameters.core_container,'/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "input/tmp/CXFT000101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": true
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_container": {
						"type": "string",
						"defaultValue": "input"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/IFB"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))),'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T02:56:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_from_20250109')]",
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_to_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_FROM_STOREGY_3_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "取込側変換パイプライン",
				"activities": [
					{
						"name": "TEST_DATA_COPY",
						"description": "一時ファイルから基軸ファイルを作成し、取込側基軸ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "from_storage_activity_copy_from_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'input/','')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.tmp_file_name",
										"type": "Expression"
									},
									"file_column_delimiter": {
										"value": "@pipeline().parameters.tmp_file_column_delimiter",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "from_storage_activity_copy_to_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('core_file_name')",
										"type": "Expression"
									},
									"container": {
										"value": "@pipeline().parameters.core_container",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "web",
						"description": "削除情報ファイルに一時ファイルと基軸ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_DATA_COPY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250219mis.blob.core.windows.net/',concat(pipeline().parameters.tmp_dir,'_DEL'),'/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:',pipeline().parameters.core_container,'/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string"
					},
					"tmp_file_name": {
						"type": "string"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": true
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_container": {
						"type": "string",
						"defaultValue": "input"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/IFB"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))),'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-07T09:18:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_from_20250109')]",
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_to_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_TO_STOREGY_01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "移送パイプライン",
				"activities": [
					{
						"name": "TEST_COPY_TO_STOREAGY",
						"description": "取込側基軸ファイルを提供側基軸ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "to_storegy_copy_from_data_set",
								"type": "DatasetReference",
								"parameters": {
									"core_dir": {
										"value": "@replace(pipeline().parameters.core_dir, 'input/', '')",
										"type": "Expression"
									},
									"core_file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "to_storegy_copy_to_data_set",
								"type": "DatasetReference",
								"parameters": {
									"core_dir": {
										"value": "@replace(pipeline().parameters.core_dir, 'input/', '')",
										"type": "Expression"
									},
									"core_file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/to_storegy_copy_from_data_set')]",
				"[concat(variables('factoryId'), '/datasets/to_storegy_copy_to_data_set')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_TO_STOREGY_02_1-1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "提供側変換パイプライン",
				"activities": [
					{
						"name": "TEST_COPY_TO_STOREAGY",
						"description": "提供側基軸ファイルを変換し提供ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "to_storage_1_activity_core",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.core_dir, 'output/', '')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "to_storage_1_activity_sup",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.sup_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.sup_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "WriteNewContent",
						"description": "削除情報ファイルに提供ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetOldContent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@activity('GetOldContent').output.ADFWebActivityResponseHeaders['x-ms-meta-tmp']",
									"type": "Expression"
								}
							},
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.core_dir,'output/core/','input/tmp/'),'_DEL','/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat(activity('GetOldContent').output.Response,decodeUriComponent('%0D%0A'),'sup:',pipeline().parameters.core_dir,'/',pipeline().parameters.core_file_name,decodeUriComponent('%0D%0A'),'sup:','output/',pipeline().parameters.sup_dir,'/',pipeline().parameters.core_file_name)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "GetOldContent",
						"description": "削除情報ファイル内容を取得するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_COPY_TO_STOREAGY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.core_dir,'output/core/','input/tmp/'),'_DEL','/DEL_INFO')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					},
					"sup_dir": {
						"type": "string",
						"defaultValue": "sup/IFA"
					},
					"sup_file_name": {
						"type": "string"
					},
					"sup_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/to_storage_1_activity_core')]",
				"[concat(variables('factoryId'), '/datasets/to_storage_1_activity_sup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_TO_STOREGY_02_1-2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "提供側変換パイプライン",
				"activities": [
					{
						"name": "TEST_COPY_TO_STOREAGY",
						"description": "提供側基軸ファイルを変換し提供ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "to_storage_1_activity_core",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.core_dir, 'output/', '')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "to_storage_1_activity_sup",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.sup_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.sup_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "WriteNewContent",
						"description": "削除情報ファイルに提供ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetOldContent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@activity('GetOldContent').output.ADFWebActivityResponseHeaders['x-ms-meta-tmp']",
									"type": "Expression"
								}
							},
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.core_dir,'output/core/','input/tmp/'),'_DEL','/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat(activity('GetOldContent').output.Response,decodeUriComponent('%0D%0A'),'sup:',pipeline().parameters.core_dir,'/',pipeline().parameters.core_file_name,decodeUriComponent('%0D%0A'),'sup:','output/',pipeline().parameters.sup_dir,'/',pipeline().parameters.core_file_name,\ndecodeUriComponent('%0D%0A'),'sup:','output/',pipeline().parameters.sup_new_dir,'/',pipeline().parameters.sup_new_file_name)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "GetOldContent",
						"description": "削除情報ファイル内容を取得するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_COPY_TO_STOREAGY_NEW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.core_dir,'output/core/','input/tmp/'),'_DEL','/DEL_INFO')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "TEST_COPY_TO_STOREAGY_NEW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TEST_COPY_TO_STOREAGY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "to_storage_1_activity_core",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.core_dir, 'output/', '')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "to_storage_1_activity_sup",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.sup_new_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.sup_new_file_name",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.sup_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					},
					"sup_dir": {
						"type": "string",
						"defaultValue": "sup/IFA/OLD"
					},
					"sup_file_name": {
						"type": "string"
					},
					"sup_new_dir": {
						"type": "string",
						"defaultValue": "sup/IFA/NEW"
					},
					"sup_new_file_name": {
						"type": "string",
						"defaultValue": "TestNew.csv"
					},
					"sup_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/to_storage_1_activity_core')]",
				"[concat(variables('factoryId'), '/datasets/to_storage_1_activity_sup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIX_TO_STOREGY_P2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "提供側変換パイプライン",
				"activities": [
					{
						"name": "TEST_COPY_TO_STOREAGY",
						"description": "提供側基軸ファイルを変換し提供ファイル領域に格納するアクティビティ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "to_storage_1_activity_core",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.core_dir, 'output/', '')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "to_storage_1_activity_sup",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.sup_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.sup_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "WriteNewContent",
						"description": "削除情報ファイルに提供ファイルの情報を設定するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetOldContent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@activity('GetOldContent').output.ADFWebActivityResponseHeaders['x-ms-meta-tmp']",
									"type": "Expression"
								}
							},
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.core_dir,'output/core/','input/tmp/'),'_DEL','/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat(activity('GetOldContent').output.Response,decodeUriComponent('%0D%0A'),'sup:',pipeline().parameters.core_dir,'/',pipeline().parameters.core_file_name,decodeUriComponent('%0D%0A'),'sup:','output/',pipeline().parameters.sup_dir,'/',pipeline().parameters.core_file_name)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "GetOldContent",
						"description": "削除情報ファイル内容を取得するアクティビティ",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_COPY_TO_STOREAGY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.core_dir,'output/core/','input/tmp/'),'_DEL','/DEL_INFO')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string",
						"defaultValue": "ss"
					},
					"core_file_name": {
						"type": "string",
						"defaultValue": "ss"
					},
					"sup_dir": {
						"type": "string",
						"defaultValue": "sup/CXFT000101"
					},
					"sup_file_name": {
						"type": "string",
						"defaultValue": "ss"
					},
					"sup_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-30T03:06:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/to_storage_1_activity_core')]",
				"[concat(variables('factoryId'), '/datasets/to_storage_1_activity_sup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FROM_STOREGY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_DATA_COPY",
						"description": "ファイル名変換、文字コード変換のテスト",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "from_storage_activity_copy_from_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'input/','')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.tmp_file_name",
										"type": "Expression"
									},
									"file_column_delimiter": {
										"value": "@pipeline().parameters.tmp_file_column_delimiter",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_file_null_value",
										"type": "Expression"
									},
									"container": "input"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "from_storage_activity_copy_to_20250109",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('core_file_name')",
										"type": "Expression"
									},
									"container": "input"
								}
							}
						]
					},
					{
						"name": "web",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "TEST_DATA_COPY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://20250110mis.blob.core.windows.net/',replace(pipeline().parameters.tmp_dir, 'tmp', 'del'),'/del_info')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat(pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string"
					},
					"tmp_file_name": {
						"type": "string"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/if1"
					},
					"core_file_name": {
						"type": "string",
						"defaultValue": "if1"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_row_delimiter": {
						"type": "string",
						"defaultValue": "\\r\\n"
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\\"
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"tmp_file_null_value": {
						"type": "string",
						"defaultValue": "\"\""
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(pipeline().parameters.core_file_name,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_from_20250109')]",
				"[concat(variables('factoryId'), '/datasets/from_storage_activity_copy_to_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline-test1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {
						"duration": "0.01:00:00"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-15T05:33:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline01-old')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "http_trigger_ssh_sftp",
							"body": "",
							"headers": {
								"sftp_host": {
									"value": "@pipeline().parameters.sftp_host",
									"type": "Expression"
								},
								"sftp_port": {
									"value": "@pipeline().parameters.sftp_port",
									"type": "Expression"
								},
								"sftp_user_name": {
									"value": "@pipeline().parameters.sftp_user_name",
									"type": "Expression"
								},
								"sftp_key_vault_name": {
									"value": "@pipeline().parameters.sftp_key_vault_name",
									"type": "Expression"
								},
								"sftp_secret": {
									"value": "@pipeline().parameters.sftp_secret",
									"type": "Expression"
								},
								"sftp_file_name": {
									"value": "@pipeline().parameters.sftp_file_name",
									"type": "Expression"
								},
								"sftp_dir": {
									"value": "@pipeline().parameters.sftp_dir",
									"type": "Expression"
								},
								"tmp_blob_name": {
									"value": "@pipeline().parameters.tmp_blob_name",
									"type": "Expression"
								},
								"tmp_container": {
									"value": "@pipeline().parameters.tmp_container",
									"type": "Expression"
								},
								"tmp_dir": {
									"value": "@pipeline().parameters.tmp_dir",
									"type": "Expression"
								}
							},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sftp_host": {
						"type": "string",
						"defaultValue": "20250312sftp.blob.core.windows.net"
					},
					"sftp_port": {
						"type": "string",
						"defaultValue": "22"
					},
					"sftp_user_name": {
						"type": "string",
						"defaultValue": "20250312sftp.azuresftp"
					},
					"sftp_dir": {
						"type": "string"
					},
					"sftp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"sftp_secret": {
						"type": "string",
						"defaultValue": "sftp-ssh-key"
					},
					"sftp_key_vault_name": {
						"type": "string",
						"defaultValue": "mis-key-value"
					},
					"tmp_blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"tmp_container": {
						"type": "string",
						"defaultValue": "input"
					},
					"tmp_dir": {
						"type": "string",
						"defaultValue": "tmp/CXFT000101"
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T06:42:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0024-pipeline01-azureFunction01",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "get_daily_file_from_ftp",
							"headers": {
								"ftp_host": {
									"value": "@pipeline().parameters.ftp_host",
									"type": "Expression"
								},
								"ftp_port": {
									"value": "@pipeline().parameters.ftp_port",
									"type": "Expression"
								},
								"ftp_user_name": {
									"value": "@pipeline().parameters.ftp_user_name",
									"type": "Expression"
								},
								"ftp_dir": {
									"value": "@pipeline().parameters.ftp_dir",
									"type": "Expression"
								},
								"ftp_file_name": {
									"value": "@pipeline().parameters.ftp_file_name",
									"type": "Expression"
								},
								"ftp_secret": {
									"value": "@pipeline().parameters.ftp_secret",
									"type": "Expression"
								},
								"ftp_key_vault_name": {
									"value": "@pipeline().parameters.ftp_key_vault_name",
									"type": "Expression"
								},
								"tmp_blob_name": {
									"value": "@pipeline().parameters.tmp_blob_name",
									"type": "Expression"
								},
								"tmp_container": {
									"value": "@pipeline().parameters.tmp_container",
									"type": "Expression"
								},
								"tmp_dir": {
									"value": "@pipeline().parameters.tmp_dir",
									"type": "Expression"
								}
							},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ftp_host": {
						"type": "string",
						"defaultValue": "20250312sftp.blob.core.windows.net"
					},
					"ftp_port": {
						"type": "string",
						"defaultValue": "22"
					},
					"ftp_user_name": {
						"type": "string",
						"defaultValue": "20250312sftp.azuresftp"
					},
					"ftp_dir": {
						"type": "string"
					},
					"ftp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"ftp_secret": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"ftp_key_vault_name": {
						"type": "string",
						"defaultValue": "mis-key-value"
					},
					"tmp_blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"tmp_container": {
						"type": "string",
						"defaultValue": "miraicontainer01"
					},
					"tmp_dir": {
						"type": "string",
						"defaultValue": "tmp/CXFT000101"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-11T09:27:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline01_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0024-pipeline01-azureFunction01",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "get_file_from_sftp",
							"headers": {
								"sftp_host": {
									"value": "@pipeline().parameters.sftp_host",
									"type": "Expression"
								},
								"sftp_port": {
									"value": "@pipeline().parameters.sftp_port",
									"type": "Expression"
								},
								"sftp_user_name": {
									"value": "@pipeline().parameters.sftp_user_name",
									"type": "Expression"
								},
								"sftp_dir": {
									"value": "@pipeline().parameters.sftp_dir",
									"type": "Expression"
								},
								"sftp_file_name": {
									"value": "@pipeline().parameters.sftp_file_name",
									"type": "Expression"
								},
								"sftp_secret": {
									"value": "@pipeline().parameters.sftp_secret",
									"type": "Expression"
								},
								"sftp_key_vault_name": {
									"value": "@pipeline().parameters.sftp_key_vault_name",
									"type": "Expression"
								},
								"tmp_blob_name": {
									"value": "@pipeline().parameters.tmp_blob_name",
									"type": "Expression"
								},
								"tmp_container": {
									"value": "@pipeline().parameters.tmp_container",
									"type": "Expression"
								},
								"tmp_dir": {
									"value": "@pipeline().parameters.tmp_dir",
									"type": "Expression"
								}
							},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sftp_host": {
						"type": "string",
						"defaultValue": "20250312sftp.blob.core.windows.net"
					},
					"sftp_port": {
						"type": "string",
						"defaultValue": "22"
					},
					"sftp_user_name": {
						"type": "string",
						"defaultValue": "20250312sftp.azuresftp"
					},
					"sftp_dir": {
						"type": "string"
					},
					"sftp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"sftp_secret": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"sftp_key_vault_name": {
						"type": "string",
						"defaultValue": "mis-key-value"
					},
					"tmp_blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"tmp_container": {
						"type": "string",
						"defaultValue": "miraicontainer01"
					},
					"tmp_dir": {
						"type": "string",
						"defaultValue": "tmp/CXFT000101"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-20T05:00:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline02-old')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "web",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "test_dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								}
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:bloomcontainer01/',pipeline().parameters.core_diff_dir,'/',variables('core_diff_file_name'),\ndecodeUriComponent('%0D%0A'),\n'imp:bloomcontainer01/',pipeline().parameters.core_all_dir,'/',variables('core_all_file_name')\n)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "test_dataflow",
						"description": "変換、差分ファイル",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Azure Function1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTIMP0024_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"core_diff_file_name": {
										"value": "'@{variables('core_diff_file_name')}'",
										"type": "Expression"
									},
									"core_all_file_name": {
										"value": "'@{variables('core_all_file_name')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SBTIMP0024Pipeline02DataFlow01Source02": {
										"dir": {
											"value": "@pipeline().parameters.core_all_dir",
											"type": "Expression"
										},
										"file_name": {
											"value": "@variables('last_file_name')",
											"type": "Expression"
										}
									},
									"SBTIMP0024Pipeline02DataFlow01Source01": {
										"dir": {
											"value": "@pipeline().parameters.core_diff_dir",
											"type": "Expression"
										},
										"file_name": {
											"value": "@pipeline().parameters.out_file_name",
											"type": "Expression"
										},
										"file_column_delimiter": "@pipeline().parameters.tmp_file_column_delimiter",
										"file_encoding": "@pipeline().parameters.tmp_file_encoding",
										"file_quote_char": "@pipeline().parameters.tmp_file_quote_char",
										"file_escape_char": "@pipeline().parameters.tmp_file_escape_char",
										"file_first_row_header": "@pipeline().parameters.tmp_file_first_row_header",
										"null_value": {
											"value": "@pipeline().parameters.tmp_null_value",
											"type": "Expression"
										}
									},
									"SBTIMP0024Pipeline02DataFlow01Sink01": {
										"dir": {
											"value": "@pipeline().parameters.core_diff_dir",
											"type": "Expression"
										},
										"file_name": "*"
									},
									"SBTIMP0024Pipeline02DataFlow01Sink02": {
										"dir": {
											"value": "@pipeline().parameters.core_all_dir",
											"type": "Expression"
										},
										"file_name": "*"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "getCoreYmdFileName",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0017_pipeline02_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"dir": "@pipeline().parameters.core_all_dir",
									"file_name": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getCoreYmdFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('getCoreYmdFileName').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(empty(variables('last_file_name')),\nand( \n    contains(\n        item().name, '_SC'),\n        greaterOrEquals(\n            replace(substring(item().name,add(lastIndexOf(item().name, '_SC'), 3), 15), '-', ''), \n            replace(substring(variables('last_file_name'),add(lastIndexOf(variables('last_file_name'), '_SC'), 3), 15), '-', '')\n            )\n))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "setLastFileName",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "last_file_name",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "http_trigger_blob_update",
							"body": {
								"value": "@pipeline().parameters.field_lengths",
								"type": "Expression"
							},
							"headers": {
								"account_name": {
									"value": "@pipeline().parameters.blob_name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.container_name",
									"type": "Expression"
								},
								"source_file_dir": {
									"value": "@replace(pipeline().parameters.tmp_dir,'input/','') ",
									"type": "Expression"
								},
								"source_file_name": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"out_file_dir": {
									"value": "@pipeline().parameters.core_diff_dir",
									"type": "Expression"
								},
								"out_file_name": {
									"value": "@pipeline().parameters.out_file_name",
									"type": "Expression"
								}
							},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "input/tmp/CXFT000101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string"
					},
					"tmp_file_escape_char": {
						"type": "string"
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_diff_dir": {
						"type": "string",
						"defaultValue": "core/CXFT000101"
					},
					"core_all_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101"
					},
					"core_all_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"container_name": {
						"type": "string",
						"defaultValue": "input"
					},
					"out_file_name": {
						"type": "string",
						"defaultValue": "tmp"
					},
					"field_lengths": {
						"type": "string",
						"defaultValue": {
							"field_lengths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					}
				},
				"variables": {
					"last_file_name": {
						"type": "String"
					},
					"core_diff_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					},
					"core_all_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.core_all_file_name, '.'), -1) , pipeline().parameters.core_all_file_name,substring(pipeline().parameters.core_all_file_name, 0, lastIndexOf(pipeline().parameters.core_all_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-07T08:14:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SBTIMP0024_pipeline02_dataFlow01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0017_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0024-pipeline02-getMetadata01",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0024_pipeline02_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"dir": "@pipeline().parameters.core_all_dir",
									"file_name": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0024-pipeline02-foreach01",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SBTIMP0024-pipeline02-getMetadata01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SBTIMP0024-pipeline02-getMetadata01').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SBTIMP0024-pipeline02-ifCondition01",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(empty(variables('last_file_name')),\nand( \n    contains(\n        item().name, '_SC'),\n        greaterOrEquals(\n            replace(substring(item().name,add(lastIndexOf(item().name, '_SC'), 3), 15), '-', ''), \n            replace(substring(variables('last_file_name'),add(lastIndexOf(variables('last_file_name'), '_SC'), 3), 15), '-', '')\n            )\n))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SBTIMP0024-pipeline02-setVariable01",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "last_file_name",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SBTIMP0024-pipeline02-azureFunction01",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "SBTIMP0024-pipeline02-foreach01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "convert_fixed_length_to_csv",
							"body": {
								"value": "@pipeline().parameters.column_widths",
								"type": "Expression"
							},
							"headers": {
								"account_name": {
									"value": "@pipeline().parameters.blob_name",
									"type": "Expression"
								},
								"source_file_dir": {
									"value": "@pipeline().parameters.tmp_dir",
									"type": "Expression"
								},
								"source_file_name": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"work_file_dir": {
									"value": "@pipeline().parameters.core_diff_dir",
									"type": "Expression"
								},
								"work_file_name": {
									"value": "@pipeline().parameters.work_file_name",
									"type": "Expression"
								}
							},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SBTIMP0024-pipeline02-callDataFlow01",
						"description": "変換、差分ファイル",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SBTIMP0024-pipeline02-azureFunction01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTIMP0024_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"core_diff_file_name": {
										"value": "'@{variables('core_diff_file_name')}'",
										"type": "Expression"
									},
									"core_all_file_name": {
										"value": "'@{variables('core_all_file_name')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SBTIMP0024Pipeline02DataFlow01Source02": {
										"dir": {
											"value": "@pipeline().parameters.core_all_dir",
											"type": "Expression"
										},
										"file_name": {
											"value": "@variables('last_file_name')",
											"type": "Expression"
										}
									},
									"SBTIMP0024Pipeline02DataFlow01Source01": {
										"dir": {
											"value": "@pipeline().parameters.core_diff_dir",
											"type": "Expression"
										},
										"file_name": {
											"value": "@pipeline().parameters.work_file_name",
											"type": "Expression"
										},
										"file_column_delimiter": "@pipeline().parameters.tmp_file_column_delimiter",
										"file_encoding": {
											"value": "@pipeline().parameters.tmp_file_encoding",
											"type": "Expression"
										},
										"file_quote_char": {
											"value": "@pipeline().parameters.tmp_file_quote_char",
											"type": "Expression"
										},
										"file_escape_char": {
											"value": "@pipeline().parameters.tmp_file_escape_char",
											"type": "Expression"
										},
										"file_first_row_header": {
											"value": "@pipeline().parameters.tmp_file_first_row_header",
											"type": "Expression"
										},
										"null_value": {
											"value": "@pipeline().parameters.tmp_null_value",
											"type": "Expression"
										}
									},
									"SBTIMP0024Pipeline02DataFlow01Sink01": {
										"dir": {
											"value": "@pipeline().parameters.core_diff_dir",
											"type": "Expression"
										},
										"file_name": "*"
									},
									"SBTIMP0024Pipeline02DataFlow01Sink02": {
										"dir": {
											"value": "@pipeline().parameters.core_all_dir",
											"type": "Expression"
										},
										"file_name": "*"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "SBTIMP0024-pipeline02-web01",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTIMP0024-pipeline02-callDataFlow01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								}
							},
							"disableCertValidation": true,
							"turnOffAsync": false,
							"url": {
								"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:miraicontainer01/',pipeline().parameters.core_diff_dir,'/',variables('core_diff_file_name'),\ndecodeUriComponent('%0D%0A'),\n'imp:miraicontainer01/',pipeline().parameters.core_all_dir,'/',variables('core_all_file_name')\n)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTIMP0024-pipeline02-excutePipeline01",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SBTIMP0024-pipeline02-web01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SBTSUP0024-pipeline01",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"core_dir": {
									"value": "@pipeline().parameters.core_diff_dir",
									"type": "Expression"
								},
								"core_file_name": {
									"value": "@variables('core_diff_file_name')",
									"type": "Expression"
								},
								"del_info_file": {
									"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SBTIMP0024-pipeline02-excutePipeline02",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SBTIMP0024-pipeline02-excutePipeline01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SBTSUP0025-pipeline01",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"core_dir": {
									"value": "@pipeline().parameters.core_all_dir",
									"type": "Expression"
								},
								"core_file_name": {
									"value": "@variables('core_all_file_name')",
									"type": "Expression"
								},
								"del_info_file": {
									"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "miraicontainer01/tmp/CXFT000101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string"
					},
					"tmp_file_escape_char": {
						"type": "string"
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_diff_dir": {
						"type": "string",
						"defaultValue": "core/CXFT000101"
					},
					"core_all_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101"
					},
					"core_all_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"work_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101_WK.csv"
					},
					"column_widths": {
						"type": "string",
						"defaultValue": {
							"column_widths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					}
				},
				"variables": {
					"last_file_name": {
						"type": "String"
					},
					"core_diff_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					},
					"core_all_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.core_all_file_name, '.'), -1) , pipeline().parameters.core_all_file_name,substring(pipeline().parameters.core_all_file_name, 0, lastIndexOf(pipeline().parameters.core_all_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-10T06:36:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTIMP0024_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]",
				"[concat(variables('factoryId'), '/dataflows/SBTIMP0024_pipeline02_dataFlow01')]",
				"[concat(variables('factoryId'), '/pipelines/SBTSUP0024-pipeline01')]",
				"[concat(variables('factoryId'), '/pipelines/SBTSUP0025-pipeline01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025-pipeline01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0025-pipeline01-azureFunction01",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "http_trigger_sftp",
							"headers": {
								"sftp_host": {
									"value": "@pipeline().parameters.ftp_host",
									"type": "Expression"
								},
								"sftp_port": {
									"value": "@pipeline().parameters.ftp_port",
									"type": "Expression"
								},
								"sftp_user_name": {
									"value": "@pipeline().parameters.ftp_user_name",
									"type": "Expression"
								},
								"sftp_dir": {
									"value": "@pipeline().parameters.ftp_dir",
									"type": "Expression"
								},
								"sftp_file_name": {
									"value": "@pipeline().parameters.ftp_file_name",
									"type": "Expression"
								},
								"sftp_secret": {
									"value": "@pipeline().parameters.ftp_secret",
									"type": "Expression"
								},
								"sftp_key_vault_name": {
									"value": "@pipeline().parameters.ftp_key_vault_name",
									"type": "Expression"
								},
								"tmp_blob_name": {
									"value": "@pipeline().parameters.tmp_blob_name",
									"type": "Expression"
								},
								"tmp_container": {
									"value": "@pipeline().parameters.tmp_container",
									"type": "Expression"
								},
								"tmp_dir": {
									"value": "@pipeline().parameters.tmp_dir",
									"type": "Expression"
								}
							},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ftp_host": {
						"type": "string"
					},
					"ftp_port": {
						"type": "string"
					},
					"ftp_user_name": {
						"type": "string"
					},
					"ftp_dir": {
						"type": "string",
						"defaultValue": "tkac/cx/daily/cxftp0081"
					},
					"ftp_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101"
					},
					"ftp_secret": {
						"type": "string",
						"defaultValue": "mirai-sftp-pw"
					},
					"ftp_key_vault_name": {
						"type": "string",
						"defaultValue": "SCP-1-KeyVault-001-Dev"
					},
					"tmp_blob_name": {
						"type": "string",
						"defaultValue": "scpblobdev01"
					},
					"tmp_container": {
						"type": "string",
						"defaultValue": "miraicontainer01"
					},
					"tmp_dir": {
						"type": "string",
						"defaultValue": "tmp"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-01T02:34:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025-pipeline02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0025-pipeline02-web01",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-callDataFlow01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"url": {
								"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:miraicontainer01/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-callDataFlow01",
						"description": "変換、差分ファイル",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-copy02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTIMP0025_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"core_file_name": {
										"value": "'@{variables('core_file_name')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SBTIMP0025Pipeline02DataFlow01Source01": {
										"quote": {
											"value": "@pipeline().parameters.tmp_file_quote_char",
											"type": "Expression"
										},
										"sacape": {
											"value": "@pipeline().parameters.tmp_file_escape_char",
											"type": "Expression"
										}
									},
									"SBTIMP0025Pipeline02DataFlow01Sink01": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-getMetadata01",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataset03",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-ifCondition01",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-getMetadata01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('SBTIMP0025-pipeline02-getMetadata01').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "SBTIMP0025-pipeline02-delete01",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "SBTIMP0025_pipeline02_dataset03",
											"type": "DatasetReference",
											"parameters": {
												"dir": {
													"value": "@pipeline().parameters.work_dir",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-ifCondition01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 10,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'miraicontainer01/','')",
										"type": "Expression"
									},
									"file_name": "@pipeline().parameters.tmp_file_name",
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset02",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBTIMP0025-pipeline02-getMetadata02",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataset03",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-foreach01",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-getMetadata02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SBTIMP0025-pipeline02-getMetadata02').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SBTIMP0025-pipeline02-azureFunction01",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "convert_fixed_length_to_csv",
										"body": {
											"value": "@pipeline().parameters.column_widths",
											"type": "Expression"
										},
										"headers": {
											"account_name": {
												"value": "@pipeline().parameters.blob_name",
												"type": "Expression"
											},
											"source_file_dir": {
												"value": "@concat(replace(pipeline().parameters.tmp_dir, 'tmp','core'),'/work')",
												"type": "Expression"
											},
											"source_file_name": {
												"value": "@item().name",
												"type": "Expression"
											},
											"work_file_dir": {
												"value": "@pipeline().parameters.work_dir",
												"type": "Expression"
											},
											"work_file_name": {
												"value": "@replace(item().name, '.csv', '_WK.csv')",
												"type": "Expression"
											}
										},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-copy02",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-foreach01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									},
									"wildcardFileName": "*_WK.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset04",
								"type": "DatasetReference",
								"parameters": {
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset05",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.work_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "miraicontainer01/tmp/CXFT008101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"work_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101_WK.csv"
					},
					"column_widths": {
						"type": "string",
						"defaultValue": {
							"column_widths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					},
					"work_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101/work"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-20T02:39:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SBTIMP0025_pipeline02_dataFlow01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset03')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset02')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset04')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset05')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025-pipeline02_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0025-pipeline02-web01",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-callDataFlow01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"url": {
								"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:miraicontainer01/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-callDataFlow01",
						"description": "変換、差分ファイル",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-copy02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTIMP0025_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"core_file_name": {
										"value": "'@{variables('core_file_name')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SBTIMP0025Pipeline02DataFlow01Source01": {
										"quote": {
											"value": "@pipeline().parameters.tmp_file_quote_char",
											"type": "Expression"
										},
										"sacape": {
											"value": "@pipeline().parameters.tmp_file_escape_char",
											"type": "Expression"
										}
									},
									"SBTIMP0025Pipeline02DataFlow01Sink01": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-getMetadata01",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataset03",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-ifCondition01",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-getMetadata01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('SBTIMP0025-pipeline02-getMetadata01').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "SBTIMP0025-pipeline02-delete01",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "SBTIMP0025_pipeline02_dataset03",
											"type": "DatasetReference",
											"parameters": {
												"dir": {
													"value": "@pipeline().parameters.work_dir",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-ifCondition01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 10,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'miraicontainer01/','')",
										"type": "Expression"
									},
									"file_name": "@pipeline().parameters.tmp_file_name",
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset02",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBTIMP0025-pipeline02-getMetadata02",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataset03",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-foreach01",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-getMetadata02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SBTIMP0025-pipeline02-getMetadata02').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SBTIMP0025-pipeline02-azureFunction01",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "convert_fixed_length_to_csv",
										"body": {
											"value": "@pipeline().parameters.column_widths",
											"type": "Expression"
										},
										"headers": {
											"account_name": {
												"value": "@pipeline().parameters.blob_name",
												"type": "Expression"
											},
											"source_file_dir": {
												"value": "@concat(replace(pipeline().parameters.tmp_dir, 'tmp','core'),'/work')",
												"type": "Expression"
											},
											"source_file_name": {
												"value": "@item().name",
												"type": "Expression"
											},
											"work_file_dir": {
												"value": "@pipeline().parameters.work_dir",
												"type": "Expression"
											},
											"work_file_name": {
												"value": "@replace(item().name, '.csv', '_WK.csv')",
												"type": "Expression"
											}
										},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-copy02",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-foreach01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									},
									"wildcardFileName": "*_WK.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset04",
								"type": "DatasetReference",
								"parameters": {
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset05",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.work_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "miraicontainer01/tmp/CXFT008101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_escape_char": {
						"type": "string",
						"defaultValue": "\""
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"work_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101_WK.csv"
					},
					"column_widths": {
						"type": "string",
						"defaultValue": {
							"column_widths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					},
					"work_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101/work"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-20T02:39:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SBTIMP0025_pipeline02_dataFlow01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset03')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset02')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset04')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset05')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025-pipeline02_bk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0025-pipeline02-web01",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-callDataFlow01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-meta-tmp": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"x-ms-blob-type": "BlockBlob"
							},
							"url": {
								"value": "@concat('https://',pipeline().parameters.blob_name,'.blob.core.windows.net/',pipeline().parameters.tmp_dir,'_DEL/DEL_INFO')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('imp:miraicontainer01/',pipeline().parameters.core_dir,'/',variables('core_file_name'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-callDataFlow01",
						"description": "変換、差分ファイル",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-copy02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTIMP0025_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"core_file_name": {
										"value": "'@{variables('core_file_name')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SBTIMP0025Pipeline02DataFlow01Source01": {
										"quote": {
											"value": "@pipeline().parameters.tmp_file_quote_char",
											"type": "Expression"
										},
										"sacape": {
											"value": "@pipeline().parameters.tmp_file_escape_char",
											"type": "Expression"
										}
									},
									"SBTIMP0025Pipeline02DataFlow01Sink01": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-getMetadata01",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataset03",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-ifCondition01",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-getMetadata01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('SBTIMP0025-pipeline02-getMetadata01').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "SBTIMP0025-pipeline02-delete01",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "SBTIMP0025_pipeline02_dataset03",
											"type": "DatasetReference",
											"parameters": {
												"dir": {
													"value": "@pipeline().parameters.work_dir",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-ifCondition01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 10,
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@replace(pipeline().parameters.tmp_dir, 'miraicontainer01/','')",
										"type": "Expression"
									},
									"file_name": "@pipeline().parameters.tmp_file_name",
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset02",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SBTIMP0025-pipeline02-getMetadata02",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataset03",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-foreach01",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-getMetadata02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SBTIMP0025-pipeline02-getMetadata02').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SBTIMP0025-pipeline02-azureFunction01",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "convert_fixed_length_to_csv",
										"body": {
											"value": "@pipeline().parameters.column_widths",
											"type": "Expression"
										},
										"headers": {
											"account_name": {
												"value": "@pipeline().parameters.blob_name",
												"type": "Expression"
											},
											"source_file_dir": {
												"value": "@concat(replace(pipeline().parameters.tmp_dir, 'tmp','core'),'/work')",
												"type": "Expression"
											},
											"source_file_name": {
												"value": "@item().name",
												"type": "Expression"
											},
											"work_file_dir": {
												"value": "@pipeline().parameters.work_dir",
												"type": "Expression"
											},
											"work_file_name": {
												"value": "@replace(item().name, '.csv', '_WK.csv')",
												"type": "Expression"
											}
										},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "SBTIMP0025-pipeline02-copy02",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SBTIMP0025-pipeline02-foreach01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.work_dir",
										"type": "Expression"
									},
									"wildcardFileName": "*_WK.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset04",
								"type": "DatasetReference",
								"parameters": {
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_quote_char": {
										"value": "@pipeline().parameters.tmp_file_quote_char",
										"type": "Expression"
									},
									"file_escape_char": {
										"value": "@pipeline().parameters.tmp_file_escape_char",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTIMP0025_pipeline02_dataset05",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"file_encoding": {
										"value": "@pipeline().parameters.tmp_file_encoding",
										"type": "Expression"
									},
									"file_first_row_header": {
										"value": "@pipeline().parameters.tmp_file_first_row_header",
										"type": "Expression"
									},
									"null_value": {
										"value": "@pipeline().parameters.tmp_null_value",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.work_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "miraicontainer01/tmp/CXFT008101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101"
					},
					"tmp_file_column_delimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"tmp_file_encoding": {
						"type": "string",
						"defaultValue": "SHIFT-JIS"
					},
					"tmp_file_quote_char": {
						"type": "string"
					},
					"tmp_file_escape_char": {
						"type": "string"
					},
					"tmp_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"tmp_null_value": {
						"type": "string"
					},
					"core_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101"
					},
					"blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"work_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101_WK.csv"
					},
					"column_widths": {
						"type": "string",
						"defaultValue": {
							"column_widths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					},
					"work_dir": {
						"type": "string",
						"defaultValue": "core/CXFT008101/work"
					}
				},
				"variables": {
					"core_file_name": {
						"type": "String",
						"defaultValue": "@concat(if(equals(lastIndexOf(pipeline().parameters.tmp_file_name, '.'), -1) , pipeline().parameters.tmp_file_name,substring(pipeline().parameters.tmp_file_name, 0, lastIndexOf(pipeline().parameters.tmp_file_name, '.'))) ,'_SC',formatDateTime(addhours(utcNow(),9),'yyyyMMdd-HHmmss'),'.csv')"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-20T02:39:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SBTIMP0025_pipeline02_dataFlow01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset03')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset02')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset04')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataset05')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024-pipeline01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTSUP0024-pipeline01-excutePipeline01",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SBTSUP0024-pipeline01-copy01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SBTSUP0024-pipeline02",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"core_dir": {
									"value": "@pipeline().parameters.core_dir",
									"type": "Expression"
								},
								"core_file_name": {
									"value": "@pipeline().parameters.core_file_name",
									"type": "Expression"
								},
								"del_info_file": {
									"value": "@pipeline().parameters.del_info_file",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SBTSUP0024-pipeline01-copy01",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTSUP0024_pipeline01_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"core_dir": "@pipeline().parameters.core_dir",
									"core_file_name": "@pipeline().parameters.core_file_name"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTSUP0024_pipeline01_dataset02",
								"type": "DatasetReference",
								"parameters": {
									"core_dir": "@pipeline().parameters.core_dir",
									"core_file_name": "@pipeline().parameters.core_file_name"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string",
						"defaultValue": "core/CXFT000101"
					},
					"core_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101_SC20250312-185811.csv"
					},
					"del_info_file": {
						"type": "string",
						"defaultValue": "https://20250219mis.blob.core.windows.net/miraicontainer01/tmp/CXFT000101_DEL/DEL_INFO"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-13T03:24:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SBTSUP0024-pipeline02')]",
				"[concat(variables('factoryId'), '/datasets/SBTSUP0024_pipeline01_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTSUP0024_pipeline01_dataset02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024-pipeline02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTSUP0024-pipeline02-web01",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTSUP0024-pipeline02-callDataFlow01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "@pipeline().parameters.del_info_file",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTSUP0024-pipeline02-web02",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTSUP0024-pipeline02-web01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@activity('SBTSUP0024-pipeline02-web01').output.ADFWebActivityResponseHeaders['x-ms-meta-tmp']",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@pipeline().parameters.del_info_file",
								"type": "Expression"
							},
							"body": {
								"value": "@concat(\nactivity('SBTSUP0024-pipeline02-web01').output.Response,\ndecodeUriComponent('%0D%0A'),\n'sup:',pipeline().parameters.core_dir,'/',pipeline().parameters.core_file_name,\ndecodeUriComponent('%0D%0A'),\n'sup:mbkcorecontainer01/',pipeline().parameters.sup_dir,'/',pipeline().parameters.core_file_name\n)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTSUP0024-pipeline02-callDataFlow01",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTSUP0024_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"core_file_name": {
										"value": "'@{pipeline().parameters.core_file_name}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SBTSUP0024Pipeline02DataFlow01Source01": {
										"dir": "@pipeline().parameters.core_dir",
										"file_name": "@pipeline().parameters.core_file_name"
									},
									"SBTSUP0024Pipeline02DataFlow01Sink01": {
										"dir": "@pipeline().parameters.sup_dir",
										"file_first_row_header": "@pipeline().parameters.sup_file_first_row_header"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					},
					"sup_dir": {
						"type": "string",
						"defaultValue": "sup/CXFT000101"
					},
					"sup_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"del_info_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-13T06:06:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SBTSUP0024_pipeline02_dataFlow01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025-pipeline01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTSUP0025-pipeline01-copy01",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SBTSUP0025_pipeline01_dataset01",
								"type": "DatasetReference",
								"parameters": {
									"core_dir": {
										"value": "@pipeline().parameters.core_dir",
										"type": "Expression"
									},
									"core_file_name": {
										"value": "@pipeline().parameters.core_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SBTSUP0025_pipeline01_dataset02",
								"type": "DatasetReference",
								"parameters": {
									"core_dir": "@pipeline().parameters.core_dir",
									"core_file_name": "@pipeline().parameters.core_file_name"
								}
							}
						]
					},
					{
						"name": "SBTSUP0025-pipeline01-excutePipeline01",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SBTSUP0025-pipeline01-copy01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SBTSUP0025-pipeline02",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"core_dir": {
									"value": "@pipeline().parameters.core_dir",
									"type": "Expression"
								},
								"core_file_name": {
									"value": "@pipeline().parameters.core_file_name",
									"type": "Expression"
								},
								"del_info_file": {
									"value": "@pipeline().parameters.del_info_file",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					},
					"del_info_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-27T06:40:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTSUP0025_pipeline01_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTSUP0025_pipeline01_dataset02')]",
				"[concat(variables('factoryId'), '/pipelines/SBTSUP0025-pipeline02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025-pipeline02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTSUP0025-pipeline02-web02",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTSUP0025-pipeline02-web01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "PUT",
							"headers": {
								"x-ms-version": "2024-11-04",
								"x-ms-blob-type": "BlockBlob",
								"x-ms-meta-tmp": {
									"value": "@activity('SBTSUP0025-pipeline02-web01').output.ADFWebActivityResponseHeaders['x-ms-meta-tmp']",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@pipeline().parameters.del_info_file",
								"type": "Expression"
							},
							"body": {
								"value": "@concat(\nactivity('SBTSUP0025-pipeline02-web01').output.Response,\ndecodeUriComponent('%0D%0A'),\n'sup:',pipeline().parameters.core_dir,'/',pipeline().parameters.core_file_name,\ndecodeUriComponent('%0D%0A'),\n'sup:mbkcorecontainer01/',pipeline().parameters.sup_old_dir,'/',pipeline().parameters.core_file_name,\ndecodeUriComponent('%0D%0A'),\n'sup:mbkcorecontainer01/',pipeline().parameters.sup_new_dir,'/',pipeline().parameters.sup_new_file_name\n)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTSUP0025-pipeline02-web01",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SBTSUP0025-pipeline02-callDataFlow01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "@pipeline().parameters.del_info_file",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "SBTSUP0025-pipeline02-callDataFlow01",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SBTSUP0025_pipeline02_dataFlow01",
								"type": "DataFlowReference",
								"parameters": {
									"sup_file_name_new": {
										"value": "'@{pipeline().parameters.sup_new_file_name}'",
										"type": "Expression"
									},
									"sup_file_name_old": {
										"value": "'@{pipeline().parameters.core_file_name}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {
										"dir": "@pipeline().parameters.core_dir",
										"file_name": "@pipeline().parameters.core_file_name"
									},
									"SBTSUP0025Pipeline02DataFlow01Sink02": {
										"dir": {
											"value": "@pipeline().parameters.sup_old_dir",
											"type": "Expression"
										},
										"file_first_row_header": "@pipeline().parameters.sup_file_first_row_header"
									},
									"SBTSUP0025Pipeline02DataFlow01Sink01": {
										"dir": "@pipeline().parameters.sup_new_dir",
										"file_first_row_header": {
											"value": "@pipeline().parameters.sup_file_first_row_header",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.test_data",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item(), '1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Azure Function1",
												"type": "AzureFunctionActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"functionName": "test",
													"headers": {},
													"method": "GET"
												},
												"linkedServiceName": {
													"referenceName": "AzureFunction1",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					},
					"sup_old_dir": {
						"type": "string",
						"defaultValue": "sup/CXFT008101/old"
					},
					"sup_new_dir": {
						"type": "string",
						"defaultValue": "sup/CXFT008101/new"
					},
					"sup_new_file_name": {
						"type": "string",
						"defaultValue": "CXFT008101.csv"
					},
					"sup_file_first_row_header": {
						"type": "bool",
						"defaultValue": false
					},
					"del_info_file": {
						"type": "string"
					},
					"test_data": {
						"type": "array",
						"defaultValue": [
							"1",
							"2"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-27T06:47:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SBTSUP0025_pipeline02_dataFlow01')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST-0612-COPY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "test",
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TEST_COPY_01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TEST_COPY_02",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TEST_COPY_01')]",
				"[concat(variables('factoryId'), '/datasets/TEST_COPY_02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST-0612-COPY2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "test",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "copy_form",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "copy_to",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/copy_form')]",
				"[concat(variables('factoryId'), '/datasets/copy_to')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_file_triiger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_file_name",
							"value": {
								"value": "@pipeline().parameters.filename",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dir",
							"value": {
								"value": "@pipeline().parameters.dir",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dataflow_flie",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@pipeline().parameters.dir",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "copy_to",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"variables": {
					"last_file_name": {
						"type": "String"
					},
					"dir": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"data": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-05T02:35:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataflow_flie')]",
				"[concat(variables('factoryId'), '/datasets/copy_to')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/http_trigger_blob_update')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "http_trigger_blob_update",
							"body": {
								"value": "@pipeline().parameters.field_lengths",
								"type": "Expression"
							},
							"headers": {
								"account_name": {
									"value": "@pipeline().parameters.blob_name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.container_name",
									"type": "Expression"
								},
								"source_file_dir": {
									"value": "@replace(pipeline().parameters.tmp_dir,'input/','') ",
									"type": "Expression"
								},
								"source_file_name": {
									"value": "@pipeline().parameters.tmp_file_name",
									"type": "Expression"
								},
								"out_file_dir": {
									"value": "@replace(pipeline().parameters.tmp_dir,'input/','') ",
									"type": "Expression"
								},
								"out_file_name": {
									"value": "@pipeline().parameters.out_file_name",
									"type": "Expression"
								}
							},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"blob_name": {
						"type": "string",
						"defaultValue": "20250219mis"
					},
					"container_name": {
						"type": "string",
						"defaultValue": "input"
					},
					"tmp_dir": {
						"type": "string",
						"defaultValue": "tmp/CXFT000101"
					},
					"tmp_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101"
					},
					"out_file_name": {
						"type": "string",
						"defaultValue": "CXFT000101.csv"
					},
					"field_lengths": {
						"type": "string",
						"defaultValue": {
							"field_lengths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					}
				},
				"folder": {
					"name": "SAMPLE"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-07T03:17:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary3",
								"type": "DatasetReference",
								"parameters": {
									"container": "20250423"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dir",
							"value": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"dir": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-05-15T05:33:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary3')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline10')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 610
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {
						"duration": "0.00:10:00"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-20T05:00:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline11')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 650
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {
						"duration": "0.00:10:00"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-20T05:00:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline12')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "http_trigger_test_connection",
							"headers": {},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T02:56:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline13')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-07T09:29:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline14')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "https://nrtutest9ce5.blob.core.windows.net/?comp=list",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@xpath(xml(activity('Web1').output.Response),'//Containers/Container/Name' )",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' )",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary2",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@concat(concat(formatDateTime(utcNow(),'yyyyMMdd'),'/'),replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' ))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@xpath(xml(activity('Web2').output.Response),'//Containers/Container/Name' )",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' )",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary3",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@concat(concat(formatDateTime(utcNow(),'yyyyMMdd'),'/'),replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' ))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "https://nrtutestb8ff.blob.core.windows.net/?comp=list",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-23T08:52:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]",
				"[concat(variables('factoryId'), '/datasets/Binary3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline14_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-ms-version": "2024-11-04"
							},
							"url": {
								"value": "https://nrtutest9ce5.blob.core.windows.net/?comp=list",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://storage.azure.com/"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@xpath(xml(activity('Web1').output.Response),'//Containers/Container/Name' )",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' )",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary2",
											"type": "DatasetReference",
											"parameters": {
												"container": "@replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' )"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@xpath(xml(activity('Web1').output.Response),'//Containers/Container/Name' )",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' )",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary3",
											"type": "DatasetReference",
											"parameters": {
												"container": "@replace(replace(base64ToString(item()['$content']), '<Name>', ''), '</Name>','' )"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-23T08:27:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]",
				"[concat(variables('factoryId'), '/datasets/Binary3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline15')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SBTIMP0024-pipeline02-azureFunction01",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "convert_fixed_length_to_csv",
							"body": {
								"value": "@pipeline().parameters.column_widths",
								"type": "Expression"
							},
							"headers": {
								"account_name": "20250219mis",
								"source_file_dir": "miraicontainer01/tmp/CXFT000101",
								"source_file_name": "CXFT000101",
								"work_file_dir": "core/CXFT000101",
								"work_file_name": "CXFT000101_WK.csv"
							},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"column_widths": {
						"type": "string",
						"defaultValue": {
							"column_widths": [
								10,
								1,
								16,
								15,
								16,
								35,
								35,
								35,
								35,
								60,
								3,
								35,
								35,
								35,
								80,
								35,
								35,
								35,
								35,
								10,
								16,
								3,
								8,
								4,
								4,
								11,
								11,
								11,
								132,
								10,
								1,
								1,
								1,
								1,
								10,
								2,
								11,
								1,
								1,
								1,
								4,
								16,
								4,
								4,
								4,
								40,
								8,
								10,
								1,
								10,
								8,
								1,
								1,
								6,
								2,
								1,
								5,
								3,
								1,
								10,
								10,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								1,
								8,
								12,
								8,
								12,
								1,
								1
							]
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-15T03:09:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline16')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().parameters.time",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": {
								"value": "@concat(pipeline().parameters.foldpath,'/',pipeline().parameters.filename)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"time": {
						"type": "int",
						"defaultValue": 2
					},
					"filename": {
						"type": "string"
					},
					"foldpath": {
						"type": "string"
					}
				},
				"variables": {
					"name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-05-08T10:47:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline17')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"quote": {
											"value": "@pipeline().parameters.quote",
											"type": "Expression"
										},
										"escape": {
											"value": "@pipeline().parameters.sacape",
											"type": "Expression"
										}
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"quote": {
						"type": "string"
					},
					"sacape": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-20T05:51:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AA",
							"value": {
								"value": "@substring(pipeline().parameters.tmp_dir, 0, 4)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tmp_dir": {
						"type": "string",
						"defaultValue": "imp:output/core/IFA/AAAA/D/c.csv"
					}
				},
				"variables": {
					"AA": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "copy_form",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "copy_to",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"aa": {
						"type": "String"
					},
					"message": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-23T04:47:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/copy_form')]",
				"[concat(variables('factoryId'), '/datasets/copy_to')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().parameters.wait_time",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"wait_time": {
						"type": "int"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-27T02:48:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sample_test1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "true",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "sample_test2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-12T06:17:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/sample_test2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sample_test2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-12T06:17:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-20T05:00:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nrtutestb8ff_link_service",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nrtutestb8ff_link_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250422",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().container",
							"type": "Expression"
						},
						"container": "imp"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250422')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250422",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().container",
							"type": "Expression"
						},
						"container": "sup"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250422')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0017_pipeline01_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wjq_test_sftp_link_service",
					"type": "LinkedServiceReference",
					"parameters": {
						"testPram": "1231"
					}
				},
				"parameters": {
					"sftp_host": {
						"type": "string"
					},
					"sftp_port": {
						"type": "string"
					},
					"sftp_user_name": {
						"type": "string"
					},
					"sftp_secret": {
						"type": "string"
					},
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"file_column_delimiter": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_quote_char": {
						"type": "string"
					},
					"file_escape_char": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().file_column_delimiter",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().file_escape_char",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().file_quote_char",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wjq_test_sftp_link_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0017_pipeline01_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"file_column_delimiter": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_quote_char": {
						"type": "string"
					},
					"file_escape_char": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "string"
					},
					"null_value": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": {
						"value": "@dataset().file_column_delimiter",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().file_escape_char",
						"type": "Expression"
					},
					"firstRowAsHeader": true,
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().file_quote_char",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0017_pipeline02_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024_pipeline02_dataFlow01_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"file_column_delimiter": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_quote_char": {
						"type": "string"
					},
					"file_escape_char": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": {
						"value": "@dataset().file_column_delimiter",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().file_escape_char",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().file_quote_char",
						"type": "Expression"
					}
				},
				"schema": [
					{
						"name": "PARTNR",
						"type": "String"
					},
					{
						"name": "SPRAS",
						"type": "String"
					},
					{
						"name": "ZAEPAANA",
						"type": "String"
					},
					{
						"name": "ZAEPAAKNA",
						"type": "String"
					},
					{
						"name": "ZAEPAANA_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA1",
						"type": "String"
					},
					{
						"name": "ZAEPANA2",
						"type": "String"
					},
					{
						"name": "ZAEPANA1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAKNA",
						"type": "String"
					},
					{
						"name": "LAND1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3",
						"type": "String"
					},
					{
						"name": "ZAEPAKAD",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD4",
						"type": "String"
					},
					{
						"name": "PSTLZ",
						"type": "String"
					},
					{
						"name": "TELF1",
						"type": "String"
					},
					{
						"name": "BLAND",
						"type": "String"
					},
					{
						"name": "DATE_TO",
						"type": "String"
					},
					{
						"name": "KOINH",
						"type": "String"
					},
					{
						"name": "BKONT",
						"type": "String"
					},
					{
						"name": "ZAEPADB",
						"type": "String"
					},
					{
						"name": "ZAEPATSR",
						"type": "String"
					},
					{
						"name": "ZAEPATDB",
						"type": "String"
					},
					{
						"name": "URL",
						"type": "String"
					},
					{
						"name": "SORTL",
						"type": "String"
					},
					{
						"name": "ZAEPAIE",
						"type": "String"
					},
					{
						"name": "ZAEPATRE",
						"type": "String"
					},
					{
						"name": "ZAEPABRF",
						"type": "String"
					},
					{
						"name": "ZAEPADEN",
						"type": "String"
					},
					{
						"name": "ZAEPAHEP",
						"type": "String"
					},
					{
						"name": "ZAETSBT",
						"type": "String"
					},
					{
						"name": "SWIFT",
						"type": "String"
					},
					{
						"name": "ZAEGFLG",
						"type": "String"
					},
					{
						"name": "ZAEBAMS",
						"type": "String"
					},
					{
						"name": "ZAEPADI",
						"type": "String"
					},
					{
						"name": "ZAEPAAP",
						"type": "String"
					},
					{
						"name": "ZAEPASEC",
						"type": "String"
					},
					{
						"name": "ZAEPAGR1",
						"type": "String"
					},
					{
						"name": "ZAEPAGR2",
						"type": "String"
					},
					{
						"name": "ZAEPAGR3",
						"type": "String"
					},
					{
						"name": "ZAEPARE",
						"type": "String"
					},
					{
						"name": "ZAEPAPIO",
						"type": "String"
					},
					{
						"name": "LZONE",
						"type": "String"
					},
					{
						"name": "ZAEPAORG",
						"type": "String"
					},
					{
						"name": "ZAEPAAFME",
						"type": "String"
					},
					{
						"name": "ZAEPAITI",
						"type": "String"
					},
					{
						"name": "ZAEPAINVE",
						"type": "String"
					},
					{
						"name": "ZAEPARESU",
						"type": "String"
					},
					{
						"name": "ZAEPARESP",
						"type": "String"
					},
					{
						"name": "ZAEPASEAC",
						"type": "String"
					},
					{
						"name": "ZAEPACAAC",
						"type": "String"
					},
					{
						"name": "ZAEPAWAOL",
						"type": "String"
					},
					{
						"name": "ZAEPACONV",
						"type": "String"
					},
					{
						"name": "ZAEPAMAC",
						"type": "String"
					},
					{
						"name": "ZAEPAHE",
						"type": "String"
					},
					{
						"name": "ZAEPAJU",
						"type": "String"
					},
					{
						"name": "ZAEPACOMP",
						"type": "String"
					},
					{
						"name": "ZAEPACOTR",
						"type": "String"
					},
					{
						"name": "ZAEPACOLA",
						"type": "String"
					},
					{
						"name": "ZAEPACOLL",
						"type": "String"
					},
					{
						"name": "ZAEPAEQ",
						"type": "String"
					},
					{
						"name": "ZAEPATA",
						"type": "String"
					},
					{
						"name": "ZAEPAST",
						"type": "String"
					},
					{
						"name": "ZAEPASITU",
						"type": "String"
					},
					{
						"name": "ZAEPAHAV",
						"type": "String"
					},
					{
						"name": "ZAEPANECO",
						"type": "String"
					},
					{
						"name": "ZAEPACAEQ",
						"type": "String"
					},
					{
						"name": "ZAEKTSR",
						"type": "String"
					},
					{
						"name": "ZAEKODB",
						"type": "String"
					},
					{
						"name": "ERDATE",
						"type": "String"
					},
					{
						"name": "ERUSNM",
						"type": "String"
					},
					{
						"name": "EDDATE",
						"type": "String"
					},
					{
						"name": "EDUSNM",
						"type": "String"
					},
					{
						"name": "LVORM",
						"type": "String"
					},
					{
						"name": "ZAEIFNW",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024_pipeline02_dataFlow01_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024_pipeline02_dataFlow01_dataset03')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PARTNR",
						"type": "String"
					},
					{
						"name": "SPRAS",
						"type": "String"
					},
					{
						"name": "ZAEPAANA",
						"type": "String"
					},
					{
						"name": "ZAEPAAKNA",
						"type": "String"
					},
					{
						"name": "ZAEPAANA_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA1",
						"type": "String"
					},
					{
						"name": "ZAEPANA2",
						"type": "String"
					},
					{
						"name": "ZAEPANA1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAKNA",
						"type": "String"
					},
					{
						"name": "LAND1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3",
						"type": "String"
					},
					{
						"name": "ZAEPAKAD",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD4",
						"type": "String"
					},
					{
						"name": "PSTLZ",
						"type": "String"
					},
					{
						"name": "TELF1",
						"type": "String"
					},
					{
						"name": "BLAND",
						"type": "String"
					},
					{
						"name": "DATE_TO",
						"type": "String"
					},
					{
						"name": "KOINH",
						"type": "String"
					},
					{
						"name": "BKONT",
						"type": "String"
					},
					{
						"name": "ZAEPADB",
						"type": "String"
					},
					{
						"name": "ZAEPATSR",
						"type": "String"
					},
					{
						"name": "ZAEPATDB",
						"type": "String"
					},
					{
						"name": "URL",
						"type": "String"
					},
					{
						"name": "SORTL",
						"type": "String"
					},
					{
						"name": "ZAEPAIE",
						"type": "String"
					},
					{
						"name": "ZAEPATRE",
						"type": "String"
					},
					{
						"name": "ZAEPABRF",
						"type": "String"
					},
					{
						"name": "ZAEPADEN",
						"type": "String"
					},
					{
						"name": "ZAEPAHEP",
						"type": "String"
					},
					{
						"name": "ZAETSBT",
						"type": "String"
					},
					{
						"name": "SWIFT",
						"type": "String"
					},
					{
						"name": "ZAEGFLG",
						"type": "String"
					},
					{
						"name": "ZAEBAMS",
						"type": "String"
					},
					{
						"name": "ZAEPADI",
						"type": "String"
					},
					{
						"name": "ZAEPAAP",
						"type": "String"
					},
					{
						"name": "ZAEPASEC",
						"type": "String"
					},
					{
						"name": "ZAEPAGR1",
						"type": "String"
					},
					{
						"name": "ZAEPAGR2",
						"type": "String"
					},
					{
						"name": "ZAEPAGR3",
						"type": "String"
					},
					{
						"name": "ZAEPARE",
						"type": "String"
					},
					{
						"name": "ZAEPAPIO",
						"type": "String"
					},
					{
						"name": "LZONE",
						"type": "String"
					},
					{
						"name": "ZAEPAORG",
						"type": "String"
					},
					{
						"name": "ZAEPAAFME",
						"type": "String"
					},
					{
						"name": "ZAEPAITI",
						"type": "String"
					},
					{
						"name": "ZAEPAINVE",
						"type": "String"
					},
					{
						"name": "ZAEPARESU",
						"type": "String"
					},
					{
						"name": "ZAEPARESP",
						"type": "String"
					},
					{
						"name": "ZAEPASEAC",
						"type": "String"
					},
					{
						"name": "ZAEPACAAC",
						"type": "String"
					},
					{
						"name": "ZAEPAWAOL",
						"type": "String"
					},
					{
						"name": "ZAEPACONV",
						"type": "String"
					},
					{
						"name": "ZAEPAMAC",
						"type": "String"
					},
					{
						"name": "ZAEPAHE",
						"type": "String"
					},
					{
						"name": "ZAEPAJU",
						"type": "String"
					},
					{
						"name": "ZAEPACOMP",
						"type": "String"
					},
					{
						"name": "ZAEPACOTR",
						"type": "String"
					},
					{
						"name": "ZAEPACOLA",
						"type": "String"
					},
					{
						"name": "ZAEPACOLL",
						"type": "String"
					},
					{
						"name": "ZAEPAEQ",
						"type": "String"
					},
					{
						"name": "ZAEPATA",
						"type": "String"
					},
					{
						"name": "ZAEPAST",
						"type": "String"
					},
					{
						"name": "ZAEPASITU",
						"type": "String"
					},
					{
						"name": "ZAEPAHAV",
						"type": "String"
					},
					{
						"name": "ZAEPANECO",
						"type": "String"
					},
					{
						"name": "ZAEPACAEQ",
						"type": "String"
					},
					{
						"name": "ZAEKTSR",
						"type": "String"
					},
					{
						"name": "ZAEKODB",
						"type": "String"
					},
					{
						"name": "ERDATE",
						"type": "String"
					},
					{
						"name": "ERUSNM",
						"type": "String"
					},
					{
						"name": "EDDATE",
						"type": "String"
					},
					{
						"name": "EDUSNM",
						"type": "String"
					},
					{
						"name": "LVORM",
						"type": "String"
					},
					{
						"name": "ZAEIFNW",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024_pipeline02_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataFlow01_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"quote": {
						"type": "string"
					},
					"sacape": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "header.csv",
						"folderPath": "core/CXFT008101/work",
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": {
						"value": "@dataset().sacape",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().quote",
						"type": "Expression"
					}
				},
				"schema": [
					{
						"name": "PARTNR",
						"type": "String"
					},
					{
						"name": "SPRAS",
						"type": "String"
					},
					{
						"name": "ZAEPAANA",
						"type": "String"
					},
					{
						"name": "ZAEPAAKNA",
						"type": "String"
					},
					{
						"name": "ZAEPAANA_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA1",
						"type": "String"
					},
					{
						"name": "ZAEPANA2",
						"type": "String"
					},
					{
						"name": "ZAEPANA1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAKNA",
						"type": "String"
					},
					{
						"name": "LAND1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3",
						"type": "String"
					},
					{
						"name": "ZAEPAKAD",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD4",
						"type": "String"
					},
					{
						"name": "PSTLZ",
						"type": "String"
					},
					{
						"name": "TELF1",
						"type": "String"
					},
					{
						"name": "BLAND",
						"type": "String"
					},
					{
						"name": "DATE_TO",
						"type": "String"
					},
					{
						"name": "KOINH",
						"type": "String"
					},
					{
						"name": "BKONT",
						"type": "String"
					},
					{
						"name": "ZAEPADB",
						"type": "String"
					},
					{
						"name": "ZAEPATSR",
						"type": "String"
					},
					{
						"name": "ZAEPATDB",
						"type": "String"
					},
					{
						"name": "URL",
						"type": "String"
					},
					{
						"name": "SORTL",
						"type": "String"
					},
					{
						"name": "ZAEPAIE",
						"type": "String"
					},
					{
						"name": "ZAEPATRE",
						"type": "String"
					},
					{
						"name": "ZAEPABRF",
						"type": "String"
					},
					{
						"name": "ZAEPADEN",
						"type": "String"
					},
					{
						"name": "ZAEPAHEP",
						"type": "String"
					},
					{
						"name": "ZAETSBT",
						"type": "String"
					},
					{
						"name": "SWIFT",
						"type": "String"
					},
					{
						"name": "ZAEGFLG",
						"type": "String"
					},
					{
						"name": "ZAEBAMS",
						"type": "String"
					},
					{
						"name": "ZAEPADI",
						"type": "String"
					},
					{
						"name": "ZAEPAAP",
						"type": "String"
					},
					{
						"name": "ZAEPASEC",
						"type": "String"
					},
					{
						"name": "ZAEPAGR1",
						"type": "String"
					},
					{
						"name": "ZAEPAGR2",
						"type": "String"
					},
					{
						"name": "ZAEPAGR3",
						"type": "String"
					},
					{
						"name": "ZAEPARE",
						"type": "String"
					},
					{
						"name": "ZAEPAPIO",
						"type": "String"
					},
					{
						"name": "LZONE",
						"type": "String"
					},
					{
						"name": "ZAEPAORG",
						"type": "String"
					},
					{
						"name": "ZAEPAAFME",
						"type": "String"
					},
					{
						"name": "ZAEPAITI",
						"type": "String"
					},
					{
						"name": "ZAEPAINVE",
						"type": "String"
					},
					{
						"name": "ZAEPARESU",
						"type": "String"
					},
					{
						"name": "ZAEPARESP",
						"type": "String"
					},
					{
						"name": "ZAEPASEAC",
						"type": "String"
					},
					{
						"name": "ZAEPACAAC",
						"type": "String"
					},
					{
						"name": "ZAEPAWAOL",
						"type": "String"
					},
					{
						"name": "ZAEPACONV",
						"type": "String"
					},
					{
						"name": "ZAEPAMAC",
						"type": "String"
					},
					{
						"name": "ZAEPAHE",
						"type": "String"
					},
					{
						"name": "ZAEPAJU",
						"type": "String"
					},
					{
						"name": "ZAEPACOMP",
						"type": "String"
					},
					{
						"name": "ZAEPACOTR",
						"type": "String"
					},
					{
						"name": "ZAEPACOLA",
						"type": "String"
					},
					{
						"name": "ZAEPACOLL",
						"type": "String"
					},
					{
						"name": "ZAEPAEQ",
						"type": "String"
					},
					{
						"name": "ZAEPATA",
						"type": "String"
					},
					{
						"name": "ZAEPAST",
						"type": "String"
					},
					{
						"name": "ZAEPASITU",
						"type": "String"
					},
					{
						"name": "ZAEPAHAV",
						"type": "String"
					},
					{
						"name": "ZAEPANECO",
						"type": "String"
					},
					{
						"name": "ZAEPACAEQ",
						"type": "String"
					},
					{
						"name": "ZAEKTSR",
						"type": "String"
					},
					{
						"name": "ZAEKODB",
						"type": "String"
					},
					{
						"name": "ERDATE",
						"type": "String"
					},
					{
						"name": "ERUSNM",
						"type": "String"
					},
					{
						"name": "EDDATE",
						"type": "String"
					},
					{
						"name": "EDUSNM",
						"type": "String"
					},
					{
						"name": "LVORM",
						"type": "String"
					},
					{
						"name": "ZAEIFNW",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataFlow01_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Test.csv",
						"folderPath": "core/CXFT008101",
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": "\u0001",
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": "",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": "",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataset03')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataset04')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_encoding": {
						"type": "string"
					},
					"file_quote_char": {
						"type": "string"
					},
					"file_escape_char": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "miraicontainer01"
					},
					"columnDelimiter": "\u0001",
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().file_escape_char",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().file_quote_char",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataset05')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": "",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024_pipeline01_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().core_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().core_dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024_pipeline01_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().core_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().core_dir",
							"type": "Expression"
						},
						"container": "mbkcorecontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024_pipeline02_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "mbkcorecontainer01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PARTNR",
						"type": "String"
					},
					{
						"name": "SPRAS",
						"type": "String"
					},
					{
						"name": "ZAEPAANA",
						"type": "String"
					},
					{
						"name": "ZAEPAAKNA",
						"type": "String"
					},
					{
						"name": "ZAEPAANA_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA1",
						"type": "String"
					},
					{
						"name": "ZAEPANA2",
						"type": "String"
					},
					{
						"name": "ZAEPANA1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPANA2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAKNA",
						"type": "String"
					},
					{
						"name": "LAND1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3",
						"type": "String"
					},
					{
						"name": "ZAEPAKAD",
						"type": "String"
					},
					{
						"name": "ZAEPAAD1_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD2_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD3_EN",
						"type": "String"
					},
					{
						"name": "ZAEPAAD4",
						"type": "String"
					},
					{
						"name": "PSTLZ",
						"type": "String"
					},
					{
						"name": "TELF1",
						"type": "String"
					},
					{
						"name": "BLAND",
						"type": "String"
					},
					{
						"name": "DATE_TO",
						"type": "String"
					},
					{
						"name": "KOINH",
						"type": "String"
					},
					{
						"name": "BKONT",
						"type": "String"
					},
					{
						"name": "ZAEPADB",
						"type": "String"
					},
					{
						"name": "ZAEPATSR",
						"type": "String"
					},
					{
						"name": "ZAEPATDB",
						"type": "String"
					},
					{
						"name": "URL",
						"type": "String"
					},
					{
						"name": "SORTL",
						"type": "String"
					},
					{
						"name": "ZAEPAIE",
						"type": "String"
					},
					{
						"name": "ZAEPATRE",
						"type": "String"
					},
					{
						"name": "ZAEPABRF",
						"type": "String"
					},
					{
						"name": "ZAEPADEN",
						"type": "String"
					},
					{
						"name": "ZAEPAHEP",
						"type": "String"
					},
					{
						"name": "ZAETSBT",
						"type": "String"
					},
					{
						"name": "SWIFT",
						"type": "String"
					},
					{
						"name": "ZAEGFLG",
						"type": "String"
					},
					{
						"name": "ZAEBAMS",
						"type": "String"
					},
					{
						"name": "ZAEPADI",
						"type": "String"
					},
					{
						"name": "ZAEPAAP",
						"type": "String"
					},
					{
						"name": "ZAEPASEC",
						"type": "String"
					},
					{
						"name": "ZAEPAGR1",
						"type": "String"
					},
					{
						"name": "ZAEPAGR2",
						"type": "String"
					},
					{
						"name": "ZAEPAGR3",
						"type": "String"
					},
					{
						"name": "ZAEPARE",
						"type": "String"
					},
					{
						"name": "ZAEPAPIO",
						"type": "String"
					},
					{
						"name": "LZONE",
						"type": "String"
					},
					{
						"name": "ZAEPAORG",
						"type": "String"
					},
					{
						"name": "ZAEPAAFME",
						"type": "String"
					},
					{
						"name": "ZAEPAITI",
						"type": "String"
					},
					{
						"name": "ZAEPAINVE",
						"type": "String"
					},
					{
						"name": "ZAEPARESU",
						"type": "String"
					},
					{
						"name": "ZAEPARESP",
						"type": "String"
					},
					{
						"name": "ZAEPASEAC",
						"type": "String"
					},
					{
						"name": "ZAEPACAAC",
						"type": "String"
					},
					{
						"name": "ZAEPAWAOL",
						"type": "String"
					},
					{
						"name": "ZAEPACONV",
						"type": "String"
					},
					{
						"name": "ZAEPAMAC",
						"type": "String"
					},
					{
						"name": "ZAEPAHE",
						"type": "String"
					},
					{
						"name": "ZAEPAJU",
						"type": "String"
					},
					{
						"name": "ZAEPACOMP",
						"type": "String"
					},
					{
						"name": "ZAEPACOTR",
						"type": "String"
					},
					{
						"name": "ZAEPACOLA",
						"type": "String"
					},
					{
						"name": "ZAEPACOLL",
						"type": "String"
					},
					{
						"name": "ZAEPAEQ",
						"type": "String"
					},
					{
						"name": "ZAEPATA",
						"type": "String"
					},
					{
						"name": "ZAEPAST",
						"type": "String"
					},
					{
						"name": "ZAEPASITU",
						"type": "String"
					},
					{
						"name": "ZAEPAHAV",
						"type": "String"
					},
					{
						"name": "ZAEPANECO",
						"type": "String"
					},
					{
						"name": "ZAEPACAEQ",
						"type": "String"
					},
					{
						"name": "ZAEKTSR",
						"type": "String"
					},
					{
						"name": "ZAEKODB",
						"type": "String"
					},
					{
						"name": "ERDATE",
						"type": "String"
					},
					{
						"name": "ERUSNM",
						"type": "String"
					},
					{
						"name": "EDDATE",
						"type": "String"
					},
					{
						"name": "EDUSNM",
						"type": "String"
					},
					{
						"name": "LVORM",
						"type": "String"
					},
					{
						"name": "ZAEIFNW",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024_pipeline02_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "mbkcorecontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025_pipeline01_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().core_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().core_dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8 without BOM",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025_pipeline01_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().core_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().core_dir",
							"type": "Expression"
						},
						"container": "mbkcorecontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8 without BOM",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025_pipeline02_dataset01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "mbkcorecontainer01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025_pipeline02_dataset02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "1.csv",
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "mbkcorecontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_COPY_01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "test",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_COPY_02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "test",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_form')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TESTA",
						"folderPath": "test",
						"container": "input"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_from2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "miraicontainer01"
					},
					"columnDelimiter": "\u0001",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_to')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "test",
						"container": "output"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8 without BOM",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_to2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CXFT008101_WK.csv",
						"folderPath": "core/CXFT008101",
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "PARTNR",
						"type": "String"
					},
					{
						"name": "SPRAS",
						"type": "String"
					},
					{
						"name": "ZAEPAANA2",
						"type": "String"
					},
					{
						"name": "ZAEPAAKNA",
						"type": "String"
					},
					{
						"name": "ZAEPAANA4",
						"type": "String"
					},
					{
						"name": "ZAEPANA15",
						"type": "String"
					},
					{
						"name": "ZAEPANA26",
						"type": "String"
					},
					{
						"name": "ZAEPANA17",
						"type": "String"
					},
					{
						"name": "ZAEPANA28",
						"type": "String"
					},
					{
						"name": "ZAEPAKNA",
						"type": "String"
					},
					{
						"name": "LAND1",
						"type": "String"
					},
					{
						"name": "ZAEPAAD111",
						"type": "String"
					},
					{
						"name": "ZAEPAAD212",
						"type": "String"
					},
					{
						"name": "ZAEPAAD313",
						"type": "String"
					},
					{
						"name": "ZAEPAKAD",
						"type": "String"
					},
					{
						"name": "ZAEPAAD115",
						"type": "String"
					},
					{
						"name": "ZAEPAAD216",
						"type": "String"
					},
					{
						"name": "ZAEPAAD317",
						"type": "String"
					},
					{
						"name": "ZAEPAAD4",
						"type": "String"
					},
					{
						"name": "PSTLZ",
						"type": "String"
					},
					{
						"name": "TELF1",
						"type": "String"
					},
					{
						"name": "BLAND",
						"type": "String"
					},
					{
						"name": "DATE_TO",
						"type": "String"
					},
					{
						"name": "KOINH",
						"type": "String"
					},
					{
						"name": "BKONT",
						"type": "String"
					},
					{
						"name": "ZAEPADB",
						"type": "String"
					},
					{
						"name": "ZAEPATSR",
						"type": "String"
					},
					{
						"name": "ZAEPATDB",
						"type": "String"
					},
					{
						"name": "URL",
						"type": "String"
					},
					{
						"name": "SORTL",
						"type": "String"
					},
					{
						"name": "ZAEPAIE",
						"type": "String"
					},
					{
						"name": "ZAEPATRE",
						"type": "String"
					},
					{
						"name": "ZAEPABRF",
						"type": "String"
					},
					{
						"name": "ZAEPADEN",
						"type": "String"
					},
					{
						"name": "ZAEPAHEP",
						"type": "String"
					},
					{
						"name": "ZAETSBT",
						"type": "String"
					},
					{
						"name": "SWIFT",
						"type": "String"
					},
					{
						"name": "ZAEGFLG",
						"type": "String"
					},
					{
						"name": "ZAEBAMS",
						"type": "String"
					},
					{
						"name": "ZAEPADI",
						"type": "String"
					},
					{
						"name": "ZAEPAAP",
						"type": "String"
					},
					{
						"name": "ZAEPASEC",
						"type": "String"
					},
					{
						"name": "ZAEPAGR1",
						"type": "String"
					},
					{
						"name": "ZAEPAGR2",
						"type": "String"
					},
					{
						"name": "ZAEPAGR3",
						"type": "String"
					},
					{
						"name": "ZAEPARE",
						"type": "String"
					},
					{
						"name": "ZAEPAPIO",
						"type": "String"
					},
					{
						"name": "LZONE",
						"type": "String"
					},
					{
						"name": "ZAEPAORG",
						"type": "String"
					},
					{
						"name": "ZAEPAAFME",
						"type": "String"
					},
					{
						"name": "ZAEPAITI",
						"type": "String"
					},
					{
						"name": "ZAEPAINVE",
						"type": "String"
					},
					{
						"name": "ZAEPARESU",
						"type": "String"
					},
					{
						"name": "ZAEPARESP",
						"type": "String"
					},
					{
						"name": "ZAEPASEAC",
						"type": "String"
					},
					{
						"name": "ZAEPACAAC",
						"type": "String"
					},
					{
						"name": "ZAEPAWAOL",
						"type": "String"
					},
					{
						"name": "ZAEPACONV",
						"type": "String"
					},
					{
						"name": "ZAEPAMAC",
						"type": "String"
					},
					{
						"name": "ZAEPAHE",
						"type": "String"
					},
					{
						"name": "ZAEPAJU",
						"type": "String"
					},
					{
						"name": "ZAEPACOMP",
						"type": "String"
					},
					{
						"name": "ZAEPACOTR",
						"type": "String"
					},
					{
						"name": "ZAEPACOLA",
						"type": "String"
					},
					{
						"name": "ZAEPACOLL",
						"type": "String"
					},
					{
						"name": "ZAEPAEQ",
						"type": "String"
					},
					{
						"name": "ZAEPATA",
						"type": "String"
					},
					{
						"name": "ZAEPAST",
						"type": "String"
					},
					{
						"name": "ZAEPASITU",
						"type": "String"
					},
					{
						"name": "ZAEPAHAV",
						"type": "String"
					},
					{
						"name": "ZAEPANECO",
						"type": "String"
					},
					{
						"name": "ZAEPACAEQ",
						"type": "String"
					},
					{
						"name": "ZAEKTSR",
						"type": "String"
					},
					{
						"name": "ZAEKODB",
						"type": "String"
					},
					{
						"name": "ERDATE",
						"type": "String"
					},
					{
						"name": "ERUSNM",
						"type": "String"
					},
					{
						"name": "EDDATE",
						"type": "String"
					},
					{
						"name": "EDUSNM",
						"type": "String"
					},
					{
						"name": "LVORM",
						"type": "String"
					},
					{
						"name": "ZAEIFNW",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_flie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCP_1_ADFLinkedServices_Blob001_Dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "work",
						"container": "container"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCP_1_ADFLinkedServices_Blob001_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_core_storegy_by_delete_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"foldPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldPath",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_sup_storegy_by_delete_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storage_2_activity_tmp_repeat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CXFT000101",
						"folderPath": "tmp/CXFT000101",
						"container": "input"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "\"",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storage_activity_copy_from_20250109')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp_TEST",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"file_column_delimiter": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_quote_char": {
						"type": "string"
					},
					"file_escape_char": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					},
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().file_column_delimiter",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().file_escape_char",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().file_quote_char",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp_TEST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storage_activity_copy_to_20250109')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storage_get_activity_core')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storage_get_activity_core_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "core/if_core",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AR BB ああsahj　aa 112",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storage_get_activity_work')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from_storegy_get_marter_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "if_a.txt",
						"folderPath": "tmp/if_a",
						"container": "input"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/header_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"quote": {
						"type": "string"
					},
					"escape": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "header.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": {
						"value": "@dataset().escape",
						"type": "Expression"
					},
					"firstRowAsHeader": false,
					"quoteChar": {
						"value": "@dataset().quote",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/header_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250219",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "header.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250219')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_data_copy_01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250422",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_quote_char": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_escape_char": {
						"type": "string"
					},
					"null_value": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "miraicontainer01"
					},
					"columnDelimiter": "\u0001",
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().file_escape_char",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().file_quote_char",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250422')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_data_copy_02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250422",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_encoding": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					},
					"null_value": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": {
						"value": "@dataset().file_encoding",
						"type": "Expression"
					},
					"escapeChar": "",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"nullValue": {
						"value": "@dataset().null_value",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250422')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_dataflow_01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250422",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test.csv",
						"folderPath": "core/CXFT008101",
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250422')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_dataflow_02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250422",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "sup/CXFT008101",
						"container": "miraicontainer01"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250422')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_storage_1_activity_core')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8 without BOM",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_storage_1_activity_sup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"file_first_row_header": {
						"type": "bool"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": {
						"value": "@dataset().file_first_row_header",
						"type": "Expression"
					},
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_storegy_copy_from_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().core_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().core_dir",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8 without BOM",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_storegy_copy_to_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"core_dir": {
						"type": "string"
					},
					"core_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().core_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().core_dir",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8 without BOM",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/union1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "11111.csv",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/union2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mis_link_service_20250109",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "union2.csv",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "A",
						"type": "String"
					},
					{
						"name": "B",
						"type": "String"
					},
					{
						"name": "C",
						"type": "String"
					},
					{
						"name": "F",
						"type": "String"
					},
					{
						"name": "G",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mis_link_service_20250109')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_blob_data_set_in')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wj_test_linkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test_1.txt",
						"folderPath": "wjq/in",
						"container": "input"
					},
					"columnDelimiter": ",",
					"encodingName": "SHIFT-JIS",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "row",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wj_test_linkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_blob_data_set_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wj_test_linkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "out.txt",
						"folderPath": "wjq/out",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "a",
						"type": "String"
					},
					{
						"name": "bbb",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wj_test_linkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_serviceNow_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wjq_test_serviceNow",
					"type": "LinkedServiceReference",
					"parameters": {
						"sn_url": {
							"value": "@dataset().sn_url",
							"type": "Expression"
						},
						"sn_user_name": {
							"value": "@dataset().sn_user_name",
							"type": "Expression"
						},
						"sn_secret": {
							"value": "@dataset().sn_secret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"sn_url": {
						"type": "string"
					},
					"sn_user_name": {
						"type": "string"
					},
					"sn_secret": {
						"type": "string"
					},
					"sn_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "ServiceNowV2Object",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().sn_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wjq_test_serviceNow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_sftp_data_set')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wjq_test_sftp_link_service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "123",
						"folderPath": "/123"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wjq_test_sftp_link_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1_properties_typeProperties_functionAppUrl')]",
					"authentication": "MSI",
					"resourceId": "0140071c-b3d4-46eb-ba3f-9627d2f74c5f",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCP_1_ADFLinkedServices_Blob001_Dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('SCP_1_ADFLinkedServices_Blob001_Dev_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp_TEST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp_TEST_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp_TEST_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp_TEST_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mis_azure_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('mis_azure_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mis_link_service_20250109')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('mis_link_service_20250109_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mis_link_service_20250219')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('mis_link_service_20250219_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mis_link_service_20250312')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('mis_link_service_20250312_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mis_link_service_20250422')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('mis_link_service_20250422_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nrtutest9ce5_link_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('nrtutest9ce5_link_service_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nrtutestb8ff_link_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('nrtutestb8ff_link_service_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wj_test_linkservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('wj_test_linkservice_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_fun_linkservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('wjq_test_fun_linkservice_properties_typeProperties_functionAppUrl')]",
					"authentication": "MSI",
					"resourceId": "402b4ecb-a2cb-4e03-a7af-76524640bf0d",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('wjq_test_fun_linkservice_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_serviceNow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sn_url": {
						"type": "string"
					},
					"sn_user_name": {
						"type": "string"
					},
					"sn_secret": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "ServiceNowV2",
				"typeProperties": {
					"endpoint": "[parameters('wjq_test_serviceNow_properties_typeProperties_endpoint')]",
					"authenticationType": "Basic",
					"username": "[parameters('wjq_test_serviceNow_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('wjq_test_serviceNow_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wjq_test_sftp_link_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"testPram": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('wjq_test_sftp_link_service_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": false,
					"hostKeyFingerprint": "[parameters('wjq_test_sftp_link_service_properties_typeProperties_hostKeyFingerprint')]",
					"authenticationType": "Basic",
					"userName": "[parameters('wjq_test_sftp_link_service_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('wjq_test_sftp_link_service_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline01-trigger01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SBTIMP0024-pipeline01",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-07T19:00:00",
						"timeZone": "China Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SBTIMP0024-pipeline01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024-pipeline02-trigger01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SBTIMP0024-pipeline02",
							"type": "PipelineReference"
						},
						"parameters": {
							"tmp_dir": "[parameters('SBTIMP0024-pipeline02-trigger01_properties_SBTIMP0024-pipeline02_parameters_tmp_dir')]",
							"tmp_file_name": "[parameters('SBTIMP0024-pipeline02-trigger01_properties_SBTIMP0024-pipeline02_parameters_tmp_file_name')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/miraicontainer01/blobs/tmp/CXFT000101/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('SBTIMP0024-pipeline02-trigger01_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SBTIMP0024-pipeline02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025-pipeline01-trigger01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SBTIMP0025-pipeline01",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-09T01:00:00",
						"timeZone": "China Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SBTIMP0025-pipeline01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025-pipeline02-trigger01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SBTIMP0025-pipeline02",
							"type": "PipelineReference"
						},
						"parameters": {
							"tmp_dir": "[parameters('SBTIMP0025-pipeline02-trigger01_properties_SBTIMP0025-pipeline02_parameters_tmp_dir')]",
							"tmp_file_name": "[parameters('SBTIMP0025-pipeline02-trigger01_properties_SBTIMP0025-pipeline02_parameters_tmp_file_name')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/miraicontainer01/blobs/tmp/CXFT008101/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('SBTIMP0025-pipeline02-trigger01_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SBTIMP0025-pipeline02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_file_triiger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "dataflow_file_triiger",
							"type": "PipelineReference"
						},
						"parameters": {
							"dir": "[parameters('dataflow_file_triiger_properties_dataflow_file_triiger_parameters_dir')]",
							"filename": "[parameters('dataflow_file_triiger_properties_dataflow_file_triiger_parameters_filename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/dataflow_file/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('dataflow_file_triiger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/dataflow_file_triiger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fix_from_storage_get_sftp')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_FROM_STORAGE_GET_SFTP",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-02-21T02:57:00",
						"timeZone": "Tokyo Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_FROM_STORAGE_GET_SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fix_from_storeage_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "取込側変換パイプライン起動のための配置トリガー",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_FROM_STOREGY_2",
							"type": "PipelineReference"
						},
						"parameters": {
							"tmp_dir": "[parameters('fix_from_storeage_trigger_properties_FIX_FROM_STOREGY_2_parameters_tmp_dir')]",
							"tmp_file_name": "[parameters('fix_from_storeage_trigger_properties_FIX_FROM_STOREGY_2_parameters_tmp_file_name')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/tmp/IFA/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('fix_from_storeage_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_FROM_STOREGY_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storeagy_delete_by_metadata')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ファイル削除パイプライン起動のための削除トリガー",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/",
					"blobPathEndsWith": "tmp/*",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storeagy_delete_by_metadata_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_webhook_url_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline16",
							"type": "PipelineReference"
						},
						"parameters": {
							"filename": "[parameters('test_webhook_url_trigger_properties_pipeline16_parameters_filename')]",
							"foldpath": "[parameters('test_webhook_url_trigger_properties_pipeline16_parameters_foldpath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/test/aa/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('test_webhook_url_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline16')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_storage_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "移送パイプライン起動のための配置トリガー",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_TO_STOREGY_01",
							"type": "PipelineReference"
						},
						"parameters": {
							"core_dir": "[parameters('to_storage_trigger_properties_FIX_TO_STOREGY_01_parameters_core_dir')]",
							"core_file_name": "[parameters('to_storage_trigger_properties_FIX_TO_STOREGY_01_parameters_core_file_name')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/core/IFA/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('to_storage_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_TO_STOREGY_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_storeage_trigger_sup')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "提供側変換パイプラインを起動するための配置トリガー",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_TO_STOREGY_02_1-1",
							"type": "PipelineReference"
						},
						"parameters": {
							"core_dir": "[parameters('to_storeage_trigger_sup_properties_FIX_TO_STOREGY_02_1-1_parameters_core_dir')]",
							"core_file_name": "[parameters('to_storeage_trigger_sup_properties_FIX_TO_STOREGY_02_1-1_parameters_core_file_name')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/output/blobs/core/IFA/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('to_storeage_trigger_sup_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_TO_STOREGY_02_1-1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/to_trigger_storeage_new')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "提供側変換パイプライン",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_TO_STOREGY_02_1-2",
							"type": "PipelineReference"
						},
						"parameters": {
							"core_dir": "[parameters('to_trigger_storeage_new_properties_FIX_TO_STOREGY_02_1-2_parameters_core_dir')]",
							"core_file_name": "[parameters('to_trigger_storeage_new_properties_FIX_TO_STOREGY_02_1-2_parameters_core_file_name')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/output/blobs/core/IFB/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('to_trigger_storeage_new_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_TO_STOREGY_02_1-2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline7",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2025-02-26T18:20:00",
						"timeZone": "China Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_TO_STOREGY_P2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/core/testAAA",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger3_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_TO_STOREGY_P2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger4')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/test/aa/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger4_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerSFTP')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_TO_STOREGY_P2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/test2/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('triggerSFTP_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_TO_STOREGY_P2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_sftp_delete2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline13",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/test/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('trigger_sftp_delete2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline13')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_to_storage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_FROM_STOREGY_3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/tmp/CXFT000101",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_to_storage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_FROM_STOREGY_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_to_storage_2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FIX_TO_STOREGY_P2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/output/blobs/core/CXFT000101",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_to_storage_2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FIX_TO_STOREGY_P2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0024_pipeline02_dataFlow01')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SBTIMP0024_pipeline02_dataFlow01_dataset03",
								"type": "DatasetReference"
							},
							"name": "SBTIMP0024Pipeline02DataFlow01Source02"
						},
						{
							"dataset": {
								"referenceName": "SBTIMP0024_pipeline02_dataFlow01_dataset01",
								"type": "DatasetReference"
							},
							"name": "SBTIMP0024Pipeline02DataFlow01Source01"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SBTIMP0024_pipeline02_dataFlow01_dataset02",
								"type": "DatasetReference"
							},
							"name": "SBTIMP0024Pipeline02DataFlow01Sink01"
						},
						{
							"dataset": {
								"referenceName": "SBTIMP0024_pipeline02_dataFlow01_dataset02",
								"type": "DatasetReference"
							},
							"name": "SBTIMP0024Pipeline02DataFlow01Sink02"
						}
					],
					"transformations": [
						{
							"name": "SBTIMP0024Pipeline02DataFlow01Exists01"
						},
						{
							"name": "SBTIMP0024Pipeline02DataFlow01Union01"
						}
					],
					"scriptLines": [
						"parameters{",
						"     core_diff_file_name as string,",
						"     core_all_file_name as string",
						"}",
						"source(output(",
						"          PARTNR as string,",
						"          SPRAS as string,",
						"          ZAEPAANA as string,",
						"          ZAEPAAKNA as string,",
						"          ZAEPAANA_EN as string,",
						"          ZAEPANA1 as string,",
						"          ZAEPANA2 as string,",
						"          ZAEPANA1_EN as string,",
						"          ZAEPANA2_EN as string,",
						"          ZAEPAKNA as string,",
						"          LAND1 as string,",
						"          ZAEPAAD1 as string,",
						"          ZAEPAAD2 as string,",
						"          ZAEPAAD3 as string,",
						"          ZAEPAKAD as string,",
						"          ZAEPAAD1_EN as string,",
						"          ZAEPAAD2_EN as string,",
						"          ZAEPAAD3_EN as string,",
						"          ZAEPAAD4 as string,",
						"          PSTLZ as string,",
						"          TELF1 as string,",
						"          BLAND as string,",
						"          DATE_TO as string,",
						"          KOINH as string,",
						"          BKONT as string,",
						"          ZAEPADB as string,",
						"          ZAEPATSR as string,",
						"          ZAEPATDB as string,",
						"          URL as string,",
						"          SORTL as string,",
						"          ZAEPAIE as string,",
						"          ZAEPATRE as string,",
						"          ZAEPABRF as string,",
						"          ZAEPADEN as string,",
						"          ZAEPAHEP as string,",
						"          ZAETSBT as string,",
						"          SWIFT as string,",
						"          ZAEGFLG as string,",
						"          ZAEBAMS as string,",
						"          ZAEPADI as string,",
						"          ZAEPAAP as string,",
						"          ZAEPASEC as string,",
						"          ZAEPAGR1 as string,",
						"          ZAEPAGR2 as string,",
						"          ZAEPAGR3 as string,",
						"          ZAEPARE as string,",
						"          ZAEPAPIO as string,",
						"          LZONE as string,",
						"          ZAEPAORG as string,",
						"          ZAEPAAFME as string,",
						"          ZAEPAITI as string,",
						"          ZAEPAINVE as string,",
						"          ZAEPARESU as string,",
						"          ZAEPARESP as string,",
						"          ZAEPASEAC as string,",
						"          ZAEPACAAC as string,",
						"          ZAEPAWAOL as string,",
						"          ZAEPACONV as string,",
						"          ZAEPAMAC as string,",
						"          ZAEPAHE as string,",
						"          ZAEPAJU as string,",
						"          ZAEPACOMP as string,",
						"          ZAEPACOTR as string,",
						"          ZAEPACOLA as string,",
						"          ZAEPACOLL as string,",
						"          ZAEPAEQ as string,",
						"          ZAEPATA as string,",
						"          ZAEPAST as string,",
						"          ZAEPASITU as string,",
						"          ZAEPAHAV as string,",
						"          ZAEPANECO as string,",
						"          ZAEPACAEQ as string,",
						"          ZAEKTSR as string,",
						"          ZAEKODB as string,",
						"          ERDATE as string,",
						"          ERUSNM as string,",
						"          EDDATE as string,",
						"          EDUSNM as string,",
						"          LVORM as string,",
						"          ZAEIFNW as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1,",
						"     partitionBy('hash', 1)) ~> SBTIMP0024Pipeline02DataFlow01Source02",
						"source(output(",
						"          PARTNR as string,",
						"          SPRAS as string,",
						"          ZAEPAANA as string,",
						"          ZAEPAAKNA as string,",
						"          ZAEPAANA_EN as string,",
						"          ZAEPANA1 as string,",
						"          ZAEPANA2 as string,",
						"          ZAEPANA1_EN as string,",
						"          ZAEPANA2_EN as string,",
						"          ZAEPAKNA as string,",
						"          LAND1 as string,",
						"          ZAEPAAD1 as string,",
						"          ZAEPAAD2 as string,",
						"          ZAEPAAD3 as string,",
						"          ZAEPAKAD as string,",
						"          ZAEPAAD1_EN as string,",
						"          ZAEPAAD2_EN as string,",
						"          ZAEPAAD3_EN as string,",
						"          ZAEPAAD4 as string,",
						"          PSTLZ as string,",
						"          TELF1 as string,",
						"          BLAND as string,",
						"          DATE_TO as string,",
						"          KOINH as string,",
						"          BKONT as string,",
						"          ZAEPADB as string,",
						"          ZAEPATSR as string,",
						"          ZAEPATDB as string,",
						"          URL as string,",
						"          SORTL as string,",
						"          ZAEPAIE as string,",
						"          ZAEPATRE as string,",
						"          ZAEPABRF as string,",
						"          ZAEPADEN as string,",
						"          ZAEPAHEP as string,",
						"          ZAETSBT as string,",
						"          SWIFT as string,",
						"          ZAEGFLG as string,",
						"          ZAEBAMS as string,",
						"          ZAEPADI as string,",
						"          ZAEPAAP as string,",
						"          ZAEPASEC as string,",
						"          ZAEPAGR1 as string,",
						"          ZAEPAGR2 as string,",
						"          ZAEPAGR3 as string,",
						"          ZAEPARE as string,",
						"          ZAEPAPIO as string,",
						"          LZONE as string,",
						"          ZAEPAORG as string,",
						"          ZAEPAAFME as string,",
						"          ZAEPAITI as string,",
						"          ZAEPAINVE as string,",
						"          ZAEPARESU as string,",
						"          ZAEPARESP as string,",
						"          ZAEPASEAC as string,",
						"          ZAEPACAAC as string,",
						"          ZAEPAWAOL as string,",
						"          ZAEPACONV as string,",
						"          ZAEPAMAC as string,",
						"          ZAEPAHE as string,",
						"          ZAEPAJU as string,",
						"          ZAEPACOMP as string,",
						"          ZAEPACOTR as string,",
						"          ZAEPACOLA as string,",
						"          ZAEPACOLL as string,",
						"          ZAEPAEQ as string,",
						"          ZAEPATA as string,",
						"          ZAEPAST as string,",
						"          ZAEPASITU as string,",
						"          ZAEPAHAV as string,",
						"          ZAEPANECO as string,",
						"          ZAEPACAEQ as string,",
						"          ZAEKTSR as string,",
						"          ZAEKODB as string,",
						"          ERDATE as string,",
						"          ERUSNM as string,",
						"          EDDATE as string,",
						"          EDUSNM as string,",
						"          LVORM as string,",
						"          ZAEIFNW as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     purgeFiles: true) ~> SBTIMP0024Pipeline02DataFlow01Source01",
						"SBTIMP0024Pipeline02DataFlow01Source02, SBTIMP0024Pipeline02DataFlow01Source01 exists(trim(SBTIMP0024Pipeline02DataFlow01Source02@PARTNR) == SBTIMP0024Pipeline02DataFlow01Source01@PARTNR",
						"     && trim(SBTIMP0024Pipeline02DataFlow01Source02@PARTNR) == SBTIMP0024Pipeline02DataFlow01Source01@PARTNR,",
						"     negate:true,",
						"     broadcast: 'auto')~> SBTIMP0024Pipeline02DataFlow01Exists01",
						"SBTIMP0024Pipeline02DataFlow01Exists01, SBTIMP0024Pipeline02DataFlow01Source01 union(byName: true)~> SBTIMP0024Pipeline02DataFlow01Union01",
						"SBTIMP0024Pipeline02DataFlow01Source01 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($core_diff_file_name)],",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA\",\",ZAEPAAKNA\",\",ZAEPAANA\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAKAD\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\"))),",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> SBTIMP0024Pipeline02DataFlow01Sink01",
						"SBTIMP0024Pipeline02DataFlow01Union01 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($core_all_file_name)],",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA\",\",ZAEPAAKNA\",\",ZAEPAANA\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAKAD\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\"))),",
						"     saveOrder: 2,",
						"     partitionBy('hash', 1)) ~> SBTIMP0024Pipeline02DataFlow01Sink02"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTIMP0024_pipeline02_dataFlow01_dataset03')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0024_pipeline02_dataFlow01_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0024_pipeline02_dataFlow01_dataset02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTIMP0025_pipeline02_dataFlow01')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataFlow01_dataset01",
								"type": "DatasetReference"
							},
							"name": "SBTIMP0025Pipeline02DataFlow01Source01"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SBTIMP0025_pipeline02_dataFlow01_dataset02",
								"type": "DatasetReference"
							},
							"name": "SBTIMP0025Pipeline02DataFlow01Sink01"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     core_file_name as string",
						"}",
						"source(output(",
						"          PARTNR as string,",
						"          SPRAS as string,",
						"          ZAEPAANA as string,",
						"          ZAEPAAKNA as string,",
						"          ZAEPAANA_EN as string,",
						"          ZAEPANA1 as string,",
						"          ZAEPANA2 as string,",
						"          ZAEPANA1_EN as string,",
						"          ZAEPANA2_EN as string,",
						"          ZAEPAKNA as string,",
						"          LAND1 as string,",
						"          ZAEPAAD1 as string,",
						"          ZAEPAAD2 as string,",
						"          ZAEPAAD3 as string,",
						"          ZAEPAKAD as string,",
						"          ZAEPAAD1_EN as string,",
						"          ZAEPAAD2_EN as string,",
						"          ZAEPAAD3_EN as string,",
						"          ZAEPAAD4 as string,",
						"          PSTLZ as string,",
						"          TELF1 as string,",
						"          BLAND as string,",
						"          DATE_TO as string,",
						"          KOINH as string,",
						"          BKONT as string,",
						"          ZAEPADB as string,",
						"          ZAEPATSR as string,",
						"          ZAEPATDB as string,",
						"          URL as string,",
						"          SORTL as string,",
						"          ZAEPAIE as string,",
						"          ZAEPATRE as string,",
						"          ZAEPABRF as string,",
						"          ZAEPADEN as string,",
						"          ZAEPAHEP as string,",
						"          ZAETSBT as string,",
						"          SWIFT as string,",
						"          ZAEGFLG as string,",
						"          ZAEBAMS as string,",
						"          ZAEPADI as string,",
						"          ZAEPAAP as string,",
						"          ZAEPASEC as string,",
						"          ZAEPAGR1 as string,",
						"          ZAEPAGR2 as string,",
						"          ZAEPAGR3 as string,",
						"          ZAEPARE as string,",
						"          ZAEPAPIO as string,",
						"          LZONE as string,",
						"          ZAEPAORG as string,",
						"          ZAEPAAFME as string,",
						"          ZAEPAITI as string,",
						"          ZAEPAINVE as string,",
						"          ZAEPARESU as string,",
						"          ZAEPARESP as string,",
						"          ZAEPASEAC as string,",
						"          ZAEPACAAC as string,",
						"          ZAEPAWAOL as string,",
						"          ZAEPACONV as string,",
						"          ZAEPAMAC as string,",
						"          ZAEPAHE as string,",
						"          ZAEPAJU as string,",
						"          ZAEPACOMP as string,",
						"          ZAEPACOTR as string,",
						"          ZAEPACOLA as string,",
						"          ZAEPACOLL as string,",
						"          ZAEPAEQ as string,",
						"          ZAEPATA as string,",
						"          ZAEPAST as string,",
						"          ZAEPASITU as string,",
						"          ZAEPAHAV as string,",
						"          ZAEPANECO as string,",
						"          ZAEPACAEQ as string,",
						"          ZAEKTSR as string,",
						"          ZAEKODB as string,",
						"          ERDATE as string,",
						"          ERUSNM as string,",
						"          EDDATE as string,",
						"          EDUSNM as string,",
						"          LVORM as string,",
						"          ZAEIFNW as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SBTIMP0025Pipeline02DataFlow01Source01",
						"SBTIMP0025Pipeline02DataFlow01Source01 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($core_file_name)],",
						"     skipDuplicateMapInputs: true,",
						"     quoteAll: true,",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA\",\",ZAEPAAKNA\",\",ZAEPAANA\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAKAD\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\"))),",
						"     partitionBy('hash', 1)) ~> SBTIMP0025Pipeline02DataFlow01Sink01"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataFlow01_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTIMP0025_pipeline02_dataFlow01_dataset02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024_pipeline01_dataFlow01')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SBTSUP0024_pipeline01_dataset01",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SBTSUP0024_pipeline01_dataset02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA\",\",ZAEPAAKNA\",\",ZAEPAANA\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPANA1\",\",ZAEPANA2\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3\",\",ZAEPAKAD\",\",ZAEPAAD1\",\",ZAEPAAD2\",\",ZAEPAAD3en\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\")))) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTSUP0024_pipeline01_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTSUP0024_pipeline01_dataset02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0024_pipeline02_dataFlow01')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SBTSUP0024_pipeline02_dataset01",
								"type": "DatasetReference"
							},
							"name": "SBTSUP0024Pipeline02DataFlow01Source01"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SBTSUP0024_pipeline02_dataset02",
								"type": "DatasetReference"
							},
							"name": "SBTSUP0024Pipeline02DataFlow01Sink01"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     core_file_name as string",
						"}",
						"source(output(",
						"          PARTNR as string,",
						"          SPRAS as string,",
						"          ZAEPAANA as string,",
						"          ZAEPAAKNA as string,",
						"          ZAEPAANA_EN as string,",
						"          ZAEPANA1 as string,",
						"          ZAEPANA2 as string,",
						"          ZAEPANA1_EN as string,",
						"          ZAEPANA2_EN as string,",
						"          ZAEPAKNA as string,",
						"          LAND1 as string,",
						"          ZAEPAAD1 as string,",
						"          ZAEPAAD2 as string,",
						"          ZAEPAAD3 as string,",
						"          ZAEPAKAD as string,",
						"          ZAEPAAD1_EN as string,",
						"          ZAEPAAD2_EN as string,",
						"          ZAEPAAD3_EN as string,",
						"          ZAEPAAD4 as string,",
						"          PSTLZ as string,",
						"          TELF1 as string,",
						"          BLAND as string,",
						"          DATE_TO as string,",
						"          KOINH as string,",
						"          BKONT as string,",
						"          ZAEPADB as string,",
						"          ZAEPATSR as string,",
						"          ZAEPATDB as string,",
						"          URL as string,",
						"          SORTL as string,",
						"          ZAEPAIE as string,",
						"          ZAEPATRE as string,",
						"          ZAEPABRF as string,",
						"          ZAEPADEN as string,",
						"          ZAEPAHEP as string,",
						"          ZAETSBT as string,",
						"          SWIFT as string,",
						"          ZAEGFLG as string,",
						"          ZAEBAMS as string,",
						"          ZAEPADI as string,",
						"          ZAEPAAP as string,",
						"          ZAEPASEC as string,",
						"          ZAEPAGR1 as string,",
						"          ZAEPAGR2 as string,",
						"          ZAEPAGR3 as string,",
						"          ZAEPARE as string,",
						"          ZAEPAPIO as string,",
						"          LZONE as string,",
						"          ZAEPAORG as string,",
						"          ZAEPAAFME as string,",
						"          ZAEPAITI as string,",
						"          ZAEPAINVE as string,",
						"          ZAEPARESU as string,",
						"          ZAEPARESP as string,",
						"          ZAEPASEAC as string,",
						"          ZAEPACAAC as string,",
						"          ZAEPAWAOL as string,",
						"          ZAEPACONV as string,",
						"          ZAEPAMAC as string,",
						"          ZAEPAHE as string,",
						"          ZAEPAJU as string,",
						"          ZAEPACOMP as string,",
						"          ZAEPACOTR as string,",
						"          ZAEPACOLA as string,",
						"          ZAEPACOLL as string,",
						"          ZAEPAEQ as string,",
						"          ZAEPATA as string,",
						"          ZAEPAST as string,",
						"          ZAEPASITU as string,",
						"          ZAEPAHAV as string,",
						"          ZAEPANECO as string,",
						"          ZAEPACAEQ as string,",
						"          ZAEKTSR as string,",
						"          ZAEKODB as string,",
						"          ERDATE as string,",
						"          ERUSNM as string,",
						"          EDDATE as string,",
						"          EDUSNM as string,",
						"          LVORM as string,",
						"          ZAEIFNW as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> SBTSUP0024Pipeline02DataFlow01Source01",
						"SBTSUP0024Pipeline02DataFlow01Source01 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($core_file_name)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA_ja\",\",ZAEPAAKNA\",\",ZAEPAANA_en\",\",ZAEPANA1_ja\",\",ZAEPANA2_ja\",\",ZAEPANA1_en\",\",ZAEPANA2_en\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1_ja\",\",ZAEPAAD2_ja\",\",ZAEPAAD3_ja\",\",ZAEPAKAD\",\",ZAEPAAD1_en\",\",ZAEPAAD2_en\",\",ZAEPAAD3_en\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\"))),",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> SBTSUP0024Pipeline02DataFlow01Sink01"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTSUP0024_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTSUP0024_pipeline02_dataset02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SBTSUP0025_pipeline02_dataFlow01')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SBTSUP0025_pipeline02_dataset01",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SBTSUP0025_pipeline02_dataset02",
								"type": "DatasetReference"
							},
							"name": "SBTSUP0025Pipeline02DataFlow01Sink02"
						},
						{
							"dataset": {
								"referenceName": "SBTSUP0025_pipeline02_dataset02",
								"type": "DatasetReference"
							},
							"name": "SBTSUP0025Pipeline02DataFlow01Sink01"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     sup_file_name_new as string,",
						"     sup_file_name_old as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($sup_file_name_old)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     quoteAll: true,",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA_ja\",\",ZAEPAAKNA\",\",ZAEPAANA_en\",\",ZAEPANA1_ja\",\",ZAEPANA2_ja\",\",ZAEPANA1_en\",\",ZAEPANA2_en\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1_ja\",\",ZAEPAAD2_ja\",\",ZAEPAAD3_ja\",\",ZAEPAKAD\",\",ZAEPAAD1_en\",\",ZAEPAAD2_en\",\",ZAEPAAD3_en\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\"))),",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> SBTSUP0025Pipeline02DataFlow01Sink02",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($sup_file_name_new)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     quoteAll: true,",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\",\",ZAEPAANA_ja\",\",ZAEPAAKNA\",\",ZAEPAANA_en\",\",ZAEPANA1_ja\",\",ZAEPANA2_ja\",\",ZAEPANA1_en\",\",ZAEPANA2_en\",\",ZAEPAKNA\",\",LAND1\",\",ZAEPAAD1_ja\",\",ZAEPAAD2_ja\",\",ZAEPAAD3_ja\",\",ZAEPAKAD\",\",ZAEPAAD1_en\",\",ZAEPAAD2_en\",\",ZAEPAAD3_en\",\",ZAEPAAD4\",\",PSTLZ\",\",TELF1\",\",BLAND\",\",DATE_TO\",\",KOINH\",\",BKONT\",\",ZAEPADB\",\",ZAEPATSR\",\",ZAEPATDB\",\",URL\",\",SORTL\",\",ZAEPAIE\",\",ZAEPATRE\",\",ZAEPABRF\",\",ZAEPADEN\",\",ZAEPAHEP\",\",ZAETSBT\",\",SWIFT\",\",ZAEGFLG\",\",ZAEBAMS\",\",ZAEPADI\",\",ZAEPAAP\",\",ZAEPASEC\",\",ZAEPAGR1\",\",ZAEPAGR2\",\",ZAEPAGR3\",\",ZAEPARE\",\",ZAEPAPIO\",\",LZONE\",\",ZAEPAORG\",\",ZAEPAAFME\",\",ZAEPAITI\",\",ZAEPAINVE\",\",ZAEPARESU\",\",ZAEPARESP\",\",ZAEPASEAC\",\",ZAEPACAAC\",\",ZAEPAWAOL\",\",ZAEPACONV\",\",ZAEPAMAC\",\",ZAEPAHE\",\",ZAEPAJU\",\",ZAEPACOMP\",\",ZAEPACOTR\",\",ZAEPACOLA\",\",ZAEPACOLL\",\",ZAEPAEQ\",\",ZAEPATA\",\",ZAEPAST\",\",ZAEPASITU\",\",ZAEPAHAV\",\",ZAEPANECO\",\",ZAEPACAEQ\",\",ZAEKTSR\",\",ZAEKODB\",\",ERDATE\",\",ERUSNM\",\",EDDATE\",\",EDUSNM\",\",LVORM\",\",ZAEIFNW\"))),",
						"     saveOrder: 2,",
						"     partitionBy('hash', 1)) ~> SBTSUP0025Pipeline02DataFlow01Sink01"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SBTSUP0025_pipeline02_dataset01')]",
				"[concat(variables('factoryId'), '/datasets/SBTSUP0025_pipeline02_dataset02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "header_1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "header_2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['out.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     quoteAll: true,",
						"     header: (array(concat(\"PARTNR\",\",SPRAS\"))),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/header_1')]",
				"[concat(variables('factoryId'), '/datasets/header_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "header_1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "header_2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     file_name as string",
						"}",
						"source(output(",
						"          PARTNR as string,",
						"          SPRAS as string,",
						"          ZAEPAANA as string,",
						"          ZAEPAAKNA as string,",
						"          ZAEPAANAEN as string,",
						"          ZAEPANA1 as string,",
						"          ZAEPANA2 as string,",
						"          ZAEPANA1EN as string,",
						"          ZAEPANA2EN as string,",
						"          ZAEPAKNA as string,",
						"          LAND1 as string,",
						"          ZAEPAAD1 as string,",
						"          ZAEPAAD2 as string,",
						"          ZAEPAAD3 as string,",
						"          ZAEPAKAD as string,",
						"          ZAEPAAD1EN as string,",
						"          ZAEPAAD2EN as string,",
						"          ZAEPAAD3EN as string,",
						"          ZAEPAAD4 as string,",
						"          PSTLZ as string,",
						"          TELF1 as string,",
						"          BLAND as string,",
						"          DATE_TO as string,",
						"          KOINH as string,",
						"          BKONT as string,",
						"          ZAEPADB as string,",
						"          ZAEPATSR as string,",
						"          ZAEPATDB as string,",
						"          URL as string,",
						"          SORTL as string,",
						"          ZAEPAIE as string,",
						"          ZAEPATRE as string,",
						"          ZAEPABRF as string,",
						"          ZAEPADEN as string,",
						"          ZAEPAHEP as string,",
						"          ZAETSBT as string,",
						"          SWIFT as string,",
						"          ZAEGFLG as string,",
						"          ZAEBAMS as string,",
						"          ZAEPADI as string,",
						"          ZAEPAAP as string,",
						"          ZAEPASEC as string,",
						"          ZAEPAGR1 as string,",
						"          ZAEPAGR2 as string,",
						"          ZAEPAGR3 as string,",
						"          ZAEPARE as string,",
						"          ZAEPAPIO as string,",
						"          LZONE as string,",
						"          ZAEPAORG as string,",
						"          ZAEPAAFME as string,",
						"          ZAEPAITI as string,",
						"          ZAEPAINVE as string,",
						"          ZAEPARESU as string,",
						"          ZAEPARESP as string,",
						"          ZAEPASEAC as string,",
						"          ZAEPACAAC as string,",
						"          ZAEPAWAOL as string,",
						"          ZAEPACONV as string,",
						"          ZAEPAMAC as string,",
						"          ZAEPAHE as string,",
						"          ZAEPAJU as string,",
						"          ZAEPACOMP as string,",
						"          ZAEPACOTR as string,",
						"          ZAEPACOLA as string,",
						"          ZAEPACOLL as string,",
						"          ZAEPAEQ as string,",
						"          ZAEPATA as string,",
						"          ZAEPAST as string,",
						"          ZAEPASITU as string,",
						"          ZAEPAHAV as string,",
						"          ZAEPANECO as string,",
						"          ZAEPACAEQ as string,",
						"          ZAEKTSR as string,",
						"          ZAEKODB as string,",
						"          ERDATE as string,",
						"          ERUSNM as string,",
						"          EDDATE as string,",
						"          EDUSNM as string,",
						"          LVORM as string,",
						"          ZAEIFNW as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($file_name)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          PARTNR,",
						"          SPRAS,",
						"          ZAEPAANA",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/header_1')]",
				"[concat(variables('factoryId'), '/datasets/header_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "test_dataflow_01",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "test_dataflow_02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['test.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     quoteAll: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/test_dataflow_01')]",
				"[concat(variables('factoryId'), '/datasets/test_dataflow_02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_diff_from_storage_get')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "from_storage_get_activity_work",
								"type": "DatasetReference"
							},
							"name": "diff"
						},
						{
							"dataset": {
								"referenceName": "from_storage_get_activity_core",
								"type": "DatasetReference"
							},
							"name": "beforeAll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "from_storage_get_activity_core",
								"type": "DatasetReference"
							},
							"name": "diffCsv"
						},
						{
							"dataset": {
								"referenceName": "from_storage_get_activity_core",
								"type": "DatasetReference"
							},
							"name": "all"
						},
						{
							"dataset": {
								"referenceName": "from_storage_get_activity_core",
								"type": "DatasetReference"
							},
							"name": "yyyymmddAll"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select2"
						},
						{
							"name": "oldData"
						},
						{
							"name": "union2"
						}
					],
					"scriptLines": [
						"parameters{",
						"     core_all_today_file_name as string,",
						"     core_diff_file_name as string",
						"}",
						"source(output(",
						"          col as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> diff",
						"source(output(",
						"          A as string,",
						"          B as string,",
						"          C as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> beforeAll",
						"diff derive(A = substring(col,1,1),",
						"          B = substring(col,2,1),",
						"          C = substring(col,3,2)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          A,",
						"          B,",
						"          C",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"beforeAll, select2 exists(beforeAll@A == select2@A",
						"     && beforeAll@B == select2@B,",
						"     negate:true,",
						"     broadcast: 'auto')~> oldData",
						"oldData, select2 union(byName: true)~> union2",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string,",
						"          Column_16 as string,",
						"          Column_17 as string,",
						"          Column_18 as string,",
						"          Column_19 as string,",
						"          Column_20 as string,",
						"          Column_21 as string,",
						"          Column_22 as string,",
						"          Column_23 as string,",
						"          Column_24 as string,",
						"          Column_25 as string,",
						"          Column_26 as string,",
						"          Column_27 as string,",
						"          Column_28 as string,",
						"          Column_29 as string,",
						"          Column_30 as string,",
						"          Column_31 as string,",
						"          Column_32 as string,",
						"          Column_33 as string,",
						"          Column_34 as string,",
						"          Column_35 as string,",
						"          Column_36 as string,",
						"          Column_37 as string,",
						"          Column_38 as string,",
						"          Column_39 as string,",
						"          Column_40 as string,",
						"          Column_41 as string,",
						"          Column_42 as string,",
						"          Column_43 as string,",
						"          Column_44 as string,",
						"          Column_45 as string,",
						"          Column_46 as string,",
						"          Column_47 as string,",
						"          Column_48 as string,",
						"          Column_49 as string,",
						"          Column_50 as string,",
						"          Column_51 as string,",
						"          Column_52 as string,",
						"          Column_53 as string,",
						"          Column_54 as string,",
						"          Column_55 as string,",
						"          Column_56 as string,",
						"          Column_57 as string,",
						"          Column_58 as string,",
						"          Column_59 as string,",
						"          Column_60 as string,",
						"          Column_61 as string,",
						"          Column_62 as string,",
						"          Column_63 as string,",
						"          Column_64 as string,",
						"          Column_65 as string,",
						"          Column_66 as string,",
						"          Column_67 as string,",
						"          Column_68 as string,",
						"          Column_69 as string,",
						"          Column_70 as string,",
						"          Column_71 as string,",
						"          Column_72 as string,",
						"          Column_73 as string,",
						"          Column_74 as string,",
						"          Column_75 as string,",
						"          Column_76 as string,",
						"          Column_77 as string,",
						"          Column_78 as string,",
						"          Column_79 as string,",
						"          Column_80 as string",
						"     ),",
						"     partitionFileNames:[($core_diff_file_name)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> diffCsv",
						"union2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string,",
						"          Column_16 as string,",
						"          Column_17 as string,",
						"          Column_18 as string,",
						"          Column_19 as string,",
						"          Column_20 as string,",
						"          Column_21 as string,",
						"          Column_22 as string,",
						"          Column_23 as string,",
						"          Column_24 as string,",
						"          Column_25 as string,",
						"          Column_26 as string,",
						"          Column_27 as string,",
						"          Column_28 as string,",
						"          Column_29 as string,",
						"          Column_30 as string,",
						"          Column_31 as string,",
						"          Column_32 as string,",
						"          Column_33 as string,",
						"          Column_34 as string,",
						"          Column_35 as string,",
						"          Column_36 as string,",
						"          Column_37 as string,",
						"          Column_38 as string,",
						"          Column_39 as string,",
						"          Column_40 as string,",
						"          Column_41 as string,",
						"          Column_42 as string,",
						"          Column_43 as string,",
						"          Column_44 as string,",
						"          Column_45 as string,",
						"          Column_46 as string,",
						"          Column_47 as string,",
						"          Column_48 as string,",
						"          Column_49 as string,",
						"          Column_50 as string,",
						"          Column_51 as string,",
						"          Column_52 as string,",
						"          Column_53 as string,",
						"          Column_54 as string,",
						"          Column_55 as string,",
						"          Column_56 as string,",
						"          Column_57 as string,",
						"          Column_58 as string,",
						"          Column_59 as string,",
						"          Column_60 as string,",
						"          Column_61 as string,",
						"          Column_62 as string,",
						"          Column_63 as string,",
						"          Column_64 as string,",
						"          Column_65 as string,",
						"          Column_66 as string,",
						"          Column_67 as string,",
						"          Column_68 as string,",
						"          Column_69 as string,",
						"          Column_70 as string,",
						"          Column_71 as string,",
						"          Column_72 as string,",
						"          Column_73 as string,",
						"          Column_74 as string,",
						"          Column_75 as string,",
						"          Column_76 as string,",
						"          Column_77 as string,",
						"          Column_78 as string,",
						"          Column_79 as string,",
						"          Column_80 as string",
						"     ),",
						"     partitionFileNames:['basename_all.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     partitionBy('hash', 1)) ~> all",
						"union2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string,",
						"          Column_16 as string,",
						"          Column_17 as string,",
						"          Column_18 as string,",
						"          Column_19 as string,",
						"          Column_20 as string,",
						"          Column_21 as string,",
						"          Column_22 as string,",
						"          Column_23 as string,",
						"          Column_24 as string,",
						"          Column_25 as string,",
						"          Column_26 as string,",
						"          Column_27 as string,",
						"          Column_28 as string,",
						"          Column_29 as string,",
						"          Column_30 as string,",
						"          Column_31 as string,",
						"          Column_32 as string,",
						"          Column_33 as string,",
						"          Column_34 as string,",
						"          Column_35 as string,",
						"          Column_36 as string,",
						"          Column_37 as string,",
						"          Column_38 as string,",
						"          Column_39 as string,",
						"          Column_40 as string,",
						"          Column_41 as string,",
						"          Column_42 as string,",
						"          Column_43 as string,",
						"          Column_44 as string,",
						"          Column_45 as string,",
						"          Column_46 as string,",
						"          Column_47 as string,",
						"          Column_48 as string,",
						"          Column_49 as string,",
						"          Column_50 as string,",
						"          Column_51 as string,",
						"          Column_52 as string,",
						"          Column_53 as string,",
						"          Column_54 as string,",
						"          Column_55 as string,",
						"          Column_56 as string,",
						"          Column_57 as string,",
						"          Column_58 as string,",
						"          Column_59 as string,",
						"          Column_60 as string,",
						"          Column_61 as string,",
						"          Column_62 as string,",
						"          Column_63 as string,",
						"          Column_64 as string,",
						"          Column_65 as string,",
						"          Column_66 as string,",
						"          Column_67 as string,",
						"          Column_68 as string,",
						"          Column_69 as string,",
						"          Column_70 as string,",
						"          Column_71 as string,",
						"          Column_72 as string,",
						"          Column_73 as string,",
						"          Column_74 as string,",
						"          Column_75 as string,",
						"          Column_76 as string,",
						"          Column_77 as string,",
						"          Column_78 as string,",
						"          Column_79 as string,",
						"          Column_80 as string",
						"     ),",
						"     partitionFileNames:[($core_all_today_file_name)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 3,",
						"     partitionBy('hash', 1)) ~> yyyymmddAll"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/from_storage_get_activity_work')]",
				"[concat(variables('factoryId'), '/datasets/from_storage_get_activity_core')]"
			]
		}
	]
}
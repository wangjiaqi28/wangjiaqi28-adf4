{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "header_1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "header_2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     file_name as string",
				"}",
				"source(output(",
				"          PARTNR as string,",
				"          SPRAS as string,",
				"          ZAEPAANA as string,",
				"          ZAEPAAKNA as string,",
				"          ZAEPAANAEN as string,",
				"          ZAEPANA1 as string,",
				"          ZAEPANA2 as string,",
				"          ZAEPANA1EN as string,",
				"          ZAEPANA2EN as string,",
				"          ZAEPAKNA as string,",
				"          LAND1 as string,",
				"          ZAEPAAD1 as string,",
				"          ZAEPAAD2 as string,",
				"          ZAEPAAD3 as string,",
				"          ZAEPAKAD as string,",
				"          ZAEPAAD1EN as string,",
				"          ZAEPAAD2EN as string,",
				"          ZAEPAAD3EN as string,",
				"          ZAEPAAD4 as string,",
				"          PSTLZ as string,",
				"          TELF1 as string,",
				"          BLAND as string,",
				"          DATE_TO as string,",
				"          KOINH as string,",
				"          BKONT as string,",
				"          ZAEPADB as string,",
				"          ZAEPATSR as string,",
				"          ZAEPATDB as string,",
				"          URL as string,",
				"          SORTL as string,",
				"          ZAEPAIE as string,",
				"          ZAEPATRE as string,",
				"          ZAEPABRF as string,",
				"          ZAEPADEN as string,",
				"          ZAEPAHEP as string,",
				"          ZAETSBT as string,",
				"          SWIFT as string,",
				"          ZAEGFLG as string,",
				"          ZAEBAMS as string,",
				"          ZAEPADI as string,",
				"          ZAEPAAP as string,",
				"          ZAEPASEC as string,",
				"          ZAEPAGR1 as string,",
				"          ZAEPAGR2 as string,",
				"          ZAEPAGR3 as string,",
				"          ZAEPARE as string,",
				"          ZAEPAPIO as string,",
				"          LZONE as string,",
				"          ZAEPAORG as string,",
				"          ZAEPAAFME as string,",
				"          ZAEPAITI as string,",
				"          ZAEPAINVE as string,",
				"          ZAEPARESU as string,",
				"          ZAEPARESP as string,",
				"          ZAEPASEAC as string,",
				"          ZAEPACAAC as string,",
				"          ZAEPAWAOL as string,",
				"          ZAEPACONV as string,",
				"          ZAEPAMAC as string,",
				"          ZAEPAHE as string,",
				"          ZAEPAJU as string,",
				"          ZAEPACOMP as string,",
				"          ZAEPACOTR as string,",
				"          ZAEPACOLA as string,",
				"          ZAEPACOLL as string,",
				"          ZAEPAEQ as string,",
				"          ZAEPATA as string,",
				"          ZAEPAST as string,",
				"          ZAEPASITU as string,",
				"          ZAEPAHAV as string,",
				"          ZAEPANECO as string,",
				"          ZAEPACAEQ as string,",
				"          ZAEKTSR as string,",
				"          ZAEKODB as string,",
				"          ERDATE as string,",
				"          ERUSNM as string,",
				"          EDDATE as string,",
				"          EDUSNM as string,",
				"          LVORM as string,",
				"          ZAEIFNW as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[($file_name)],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          PARTNR,",
				"          SPRAS,",
				"          ZAEPAANA",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}
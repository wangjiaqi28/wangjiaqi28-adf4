{
	"name": "SAMPLE_DATACOPY",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "If Condition2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"maxRowsPerFile": 10,
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "copy_form",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "copy_to",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "copy_to",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(and(contains(item().name ,'CXFT008101'),contains(item().name ,'.csv')), not(contains(item().name ,'_WK')))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "SBTIMP0025-pipeline02-azureFunction01",
										"type": "AzureFunctionActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 1,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"functionName": "convert_fixed_length_to_csv",
											"body": {
												"value": "@pipeline().parameters.column_widths",
												"type": "Expression"
											},
											"headers": {
												"account_name": "20250219mis",
												"source_file_dir": "miraicontainer01/wk/CXFT008101",
												"source_file_name": {
													"value": "@item().name",
													"type": "Expression"
												},
												"work_file_dir": "wk/CXFT008101",
												"work_file_name": {
													"value": "@replace(item().name, '.csv','_WK.csv')",
													"type": "Expression"
												}
											},
											"method": "POST"
										},
										"linkedServiceName": {
											"referenceName": "AzureFunction1",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Copy data2",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": "wk/CXFT008101",
							"wildcardFileName": "*_WK.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "copy_from2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "copy_to2",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "copy_to",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Delete1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(string(activity('Delete1').error.message),'The required Blob is missing' )",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@string(activity('Delete1').error.message)",
									"type": "Expression"
								},
								"errorCode": "404"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"column_widths": {
				"type": "string",
				"defaultValue": {
					"column_widths": [
						10,
						1,
						16,
						15,
						16,
						35,
						35,
						35,
						35,
						60,
						3,
						35,
						35,
						35,
						80,
						35,
						35,
						35,
						35,
						10,
						16,
						3,
						8,
						4,
						4,
						11,
						11,
						11,
						132,
						10,
						1,
						1,
						1,
						1,
						10,
						2,
						11,
						1,
						1,
						1,
						4,
						16,
						4,
						4,
						4,
						40,
						8,
						10,
						1,
						10,
						8,
						1,
						1,
						6,
						2,
						1,
						5,
						3,
						1,
						10,
						10,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						1,
						8,
						12,
						8,
						12,
						1,
						1
					]
				}
			}
		},
		"variables": {
			"message": {
				"type": "String"
			}
		},
		"folder": {
			"name": "SAMPLE"
		},
		"annotations": [],
		"lastPublishTime": "2025-04-23T06:14:29Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}